{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/Leaderboard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Container, Content, List, ListItem, Left, Body, Right, Thumbnail, Text, Button, Icon } from 'native-base';\nimport WikiLoader from \"../common/WikiLoader\";\nimport { Box } from 'react-native-design-utility';\nimport { images } from \"../constant/images\";\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport { LongPressGestureHandler } from 'react-native-gesture-handler';\nvar list = [{\n  name: 'Amy Farha',\n  avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n  subtitle: 'Vice President'\n}, {\n  name: 'Chris Jackson',\n  avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n  subtitle: 'Vice Chairman'\n}];\n\nvar Leaderboard = function (_React$Component) {\n  _inherits(Leaderboard, _React$Component);\n\n  var _super = _createSuper(Leaderboard);\n\n  function Leaderboard() {\n    var _this;\n\n    _classCallCheck(this, Leaderboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      bestPlayers: [],\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(Leaderboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://proj.ruppin.ac.il/bgroup65/prod/api/playerwinners').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isReady: true,\n          bestPlayers: responseJson\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isReady) {\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }\n        }, React.createElement(WikiLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, this.state.bestPlayers.map(function (p) {\n        return React.createElement(ListItem, {\n          avatar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 27\n          }\n        }, React.createElement(Left, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }\n        }, React.createElement(Thumbnail, {\n          source: {\n            uri: p.ProfilePic\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 31\n          }\n        })), React.createElement(Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: 'bold',\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 27\n          }\n        }, p.NickName), React.createElement(Text, {\n          note: true,\n          style: {\n            color: '#7CCB9D',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 27\n          }\n        }, \"Number of wins: \", p.NumOfWinnings)));\n      }))));\n    }\n  }]);\n\n  return Leaderboard;\n}(React.Component);\n\nLeaderboard.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerTitle: React.createElement(Text, {\n      style: {\n        fontSize: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"\\uD83C\\uDFC6\"),\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }),\n    headerTitleStyle: {\n      color: '#4D5F66',\n      fontSize: 23\n    },\n    headerRight: React.createElement(Text, {\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }),\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('ChooseAGame');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#403773\",\n        fontSize: 32\n      },\n      name: \"ios-arrow-round-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }))\n  };\n};\n\nexport { Leaderboard as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/Leaderboard.js"],"names":["React","Component","Container","Content","List","ListItem","Left","Body","Right","Thumbnail","Text","Button","Icon","WikiLoader","Box","images","NetworkHeader","LongPressGestureHandler","list","name","avatar_url","subtitle","Leaderboard","state","bestPlayers","isReady","fetch","then","response","json","responseJson","setState","catch","error","console","map","p","uri","ProfilePic","fontWeight","textAlign","NickName","color","NumOfWinnings","navigationOptions","navigation","headerTitle","fontSize","headerBackground","headerTitleStyle","headerRight","marginRight","headerLeft","navigate","backgroundColor","elevation"],"mappings":"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","sourcesContent":["\n//שלל הספריות שהשתמשנו בהם\n\nimport React,{Component} from 'react';\nimport { Image } from \"react-native\";\nimport { Container, Content, List, ListItem, Left, Body, Right, Thumbnail, Text,Button,Icon} from 'native-base';\nimport WikiLoader from '../common/WikiLoader';\nimport {Box} from 'react-native-design-utility';\nimport {images} from '../constant/images';\nimport NetworkHeader from '../common/NetworkHeader';\nimport { LongPressGestureHandler } from 'react-native-gesture-handler';\n\n\n\n//for example\nconst list = [\n  {\n    name: 'Amy Farha',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: 'Vice President'\n  },\n  {\n    name: 'Chris Jackson',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: 'Vice Chairman'\n  },\n];\n\nexport default class Leaderboard extends React.Component{\n    state={\n        bestPlayers:[],\n          //אנימציית ההמתנה - כל עוד isready = false הוא יקפוץ\n        isReady:false\n    }\n        //עיצוב כללי של העמוד\n\n    static navigationOptions = ({ navigation }) =>{\n      return{\n        headerTitle: (\n          <Text style={{fontSize:35}}>🏆</Text>\n        ),\n        headerBackground: (\n          <NetworkHeader/>\n        ),\n        headerTitleStyle: { color: '#4D5F66',fontSize:23 },\n        headerRight:<Text style={{marginRight:10}}></Text>,\n        headerLeft: \n          ( <Button\n              onPress={()=>navigation.navigate('ChooseAGame')}\n              style={{backgroundColor:\"transparent\",elevation:0}}>\n              <Icon style={{color:\"#403773\",fontSize:32}}  name=\"ios-arrow-round-back\" />\n          </Button>\n          ),\n          }\n      }\n      //ברגע שהמסך מוכן - זאת הפונקציה הראשונה שמתבצעת\n      //document ready\n    componentDidMount(){\n           //תבנית כתיבה קבועה מגוגל לפעולת הGET\n      //קישור לדאתא שהוצאנו מהDB\n      //הוצאנו רשימת משתמשים אשר נמצאים ב25 המקומות הראשונים לפי מספר הניצחונות של כל משתמש\n      fetch('https://proj.ruppin.ac.il/bgroup65/prod/api/playerwinners')\n            //את רשימת האנשים נמיר לג'ייסון\n      .then((response) => response.json())\n      .then((responseJson) => {\n           //כאשר הג'ייסון מוכן קודם כל נפסיק את פעולת ההמתנה\n        //הפסקה של האנימציה שקופצת\n        //ונעדכן את רשימת המשתמשים לפי השליפה מהדאתאבייס\n        this.setState({\n          isReady:true,\n          bestPlayers:responseJson\n        })\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n        \n    }\n        //ברגע שיש עידכון של הstate והוא מוכן הוא מרונדר אוטומטית\n    render(){\n        if (!this.state.isReady) {\n            return(\n              <Box f={1} center bg=\"white\">\n                <WikiLoader/>\n              </Box>\n            )\n        }\n        return(\n            <Container>\n              <Content>\n                <List>\n                {\n                      //עיצוב עבור כל משתמש ברשימה שהוצאנו\n                  //נעבור על כל איבר ברשימה ונבצע עליו את הפעולות הבאות\n                  //יקבל את התמונה ששלפנו עבורו\n                  //שם המשתמש (הכינוי)\n                  //מספר הנקודות שקיבל\n                    this.state.bestPlayers.map((p) => (\n                      \n                          <ListItem avatar>\n                            <Left>\n                              <Thumbnail source={{ uri: p.ProfilePic}} />\n                            </Left>\n                            <Body>\n                          <Text style={{fontWeight:'bold',textAlign:'left'}}>{p.NickName}</Text>\n                          <Text note style={{color:'#7CCB9D',fontWeight:'bold'}}>Number of wins: {p.NumOfWinnings}</Text>\n                          </Body>\n                      </ListItem>\n                    ))\n                }\n              </List>\n            </Content>\n          </Container>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}