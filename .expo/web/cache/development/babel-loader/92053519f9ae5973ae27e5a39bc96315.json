{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-indicators/src/components/material-indicator/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Indicator from \"../indicator\";\nimport styles from \"./styles\";\n\nvar MaterialIndicator = function (_PureComponent) {\n  _inherits(MaterialIndicator, _PureComponent);\n\n  var _super = _createSuper(MaterialIndicator);\n\n  function MaterialIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, MaterialIndicator);\n\n    _this = _super.call(this, props);\n    _this.renderComponent = _this.renderComponent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MaterialIndicator, [{\n    key: \"renderComponent\",\n    value: function renderComponent(_ref) {\n      var index = _ref.index,\n          count = _ref.count,\n          progress = _ref.progress;\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color,\n          animationDuration = _this$props.animationDuration;\n      var frames = 60 * animationDuration / 1000;\n      var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n      var inputRange = Array.from(new Array(frames), function (undefined, frameIndex) {\n        return frameIndex / (frames - 1);\n      });\n      var outputRange = Array.from(new Array(frames), function (undefined, frameIndex) {\n        var progress = 2 * frameIndex / (frames - 1);\n        var rotation = index ? +(360 - 15) : -(180 - 15);\n\n        if (progress > 1.0) {\n          progress = 2.0 - progress;\n        }\n\n        var direction = index ? -1 : +1;\n        return direction * (180 - 30) * easing(progress) + rotation + 'deg';\n      });\n      var layerStyle = {\n        width: size,\n        height: size,\n        transform: [{\n          rotate: progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0 + 30 + 15 + 'deg', 2 * 360 + 30 + 15 + 'deg']\n          })\n        }]\n      };\n      var viewportStyle = {\n        width: size,\n        height: size,\n        transform: [{\n          translateY: index ? -size / 2 : 0\n        }, {\n          rotate: progress.interpolate({\n            inputRange: inputRange,\n            outputRange: outputRange\n          })\n        }]\n      };\n      var containerStyle = {\n        width: size,\n        height: size / 2,\n        overflow: 'hidden'\n      };\n      var offsetStyle = index ? {\n        top: size / 2\n      } : null;\n      var lineStyle = {\n        width: size,\n        height: size,\n        borderColor: color,\n        borderWidth: size / 10,\n        borderRadius: size / 2\n      };\n      return React.createElement(Animated.View, _extends({\n        style: styles.layer\n      }, {\n        key: index\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, {\n        style: layerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [containerStyle, offsetStyle],\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: viewportStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.View, {\n        style: containerStyle,\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, React.createElement(Animated.View, {\n        style: lineStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          width = _this$props2.size,\n          height = _this$props2.size,\n          props = _objectWithoutProperties(_this$props2, [\"style\", \"size\", \"size\"]);\n\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, React.createElement(Indicator, _extends({\n        style: {\n          width: width,\n          height: height\n        },\n        renderComponent: this.renderComponent\n      }, props, {\n        count: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return MaterialIndicator;\n}(PureComponent);\n\nMaterialIndicator.defaultProps = {\n  animationDuration: 2400,\n  color: 'rgb(0, 0, 0)',\n  size: 40\n};\nMaterialIndicator.propTypes = _objectSpread(_objectSpread({}, Indicator.propTypes), {}, {\n  color: PropTypes.string,\n  size: PropTypes.number\n});\nexport { MaterialIndicator as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-indicators/src/components/material-indicator/index.js"],"names":["PropTypes","React","PureComponent","Indicator","styles","MaterialIndicator","props","renderComponent","bind","index","count","progress","size","color","animationDuration","frames","easing","Easing","bezier","inputRange","Array","from","undefined","frameIndex","outputRange","rotation","direction","layerStyle","width","height","transform","rotate","interpolate","viewportStyle","translateY","containerStyle","overflow","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","layer","key","style","container","defaultProps","propTypes","string","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Animated, Easing } from 'react-native';\n\nimport Indicator from '../indicator';\nimport styles from './styles';\n\nexport default class MaterialIndicator extends PureComponent {\n  static defaultProps = {\n    animationDuration: 2400,\n\n    color: 'rgb(0, 0, 0)',\n    size: 40,\n  };\n\n  static propTypes = {\n    ...Indicator.propTypes,\n\n    color: PropTypes.string,\n    size: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderComponent = this.renderComponent.bind(this);\n  }\n\n  renderComponent({ index, count, progress }) {\n    let { size, color, animationDuration } = this.props;\n\n    let frames = 60 * animationDuration / 1000;\n    let easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\n    let inputRange = Array\n      .from(new Array(frames), (undefined, frameIndex) => frameIndex / (frames - 1));\n\n    let outputRange = Array\n      .from(new Array(frames), (undefined, frameIndex) => {\n        let progress = 2 * frameIndex / (frames - 1);\n        let rotation = index?\n          +(360 - 15):\n          -(180 - 15);\n\n        if (progress > 1.0) {\n          progress = 2.0 - progress;\n        }\n\n        let direction = index?\n          -1:\n          +1;\n\n        return (direction * (180 - 30) * easing(progress) + rotation) + 'deg';\n      });\n\n    let layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [(0 + 30 + 15) + 'deg', (2 * 360 + 30 + 15) + 'deg'],\n        }),\n      }],\n    };\n\n    let viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index? -size / 2 : 0,\n      }, {\n        rotate: progress.interpolate({ inputRange, outputRange }),\n      }],\n    };\n\n    let containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    let offsetStyle = index?\n      { top: size / 2 }:\n      null;\n\n    let lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2,\n    };\n\n    return (\n      <Animated.View style={styles.layer} {...{ key: index }}>\n        <Animated.View style={layerStyle}>\n          <Animated.View style={[containerStyle, offsetStyle]} collapsable={false}>\n            <Animated.View style={viewportStyle}>\n              <Animated.View style={containerStyle} collapsable={false}>\n                <Animated.View style={lineStyle} />\n              </Animated.View>\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n\n  render() {\n    let { style, size: width, size: height, ...props } = this.props;\n\n    return (\n      <View style={[styles.container, style]}>\n        <Indicator\n          style={{ width, height }}\n          renderComponent={this.renderComponent}\n          {...props}\n          count={2}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}