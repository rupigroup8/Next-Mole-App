{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { createAppContainer, createStackNavigator, createSwitchNavigator, createBottomTabNavigator } from 'react-navigation';\nimport React, { Component } from 'react';\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport Categories from \"./CategoriesScreen\";\nvar AuthNavigator = createStackNavigator({\n  Login: {\n    getScreen: function getScreen() {\n      return require(\"./LoginScreen\").default;\n    }\n  }\n}, {\n  navigationOptions: {\n    header: null\n  }\n});\nvar ProfileNavigator = createStackNavigator({\n  Profile: {\n    getScreen: function getScreen() {\n      return require(\"./ProfileScreen\").default;\n    }\n  }\n});\nvar BombNavigator = createStackNavigator({\n  BombShop: {\n    getScreen: function getScreen() {\n      return require(\"./BombShop\").default;\n    }\n  }\n});\nvar LeaderboardNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./Leaderboard\").default;\n    }\n  }\n});\nvar PathsNavigator = createStackNavigator({\n  BombShop: {\n    getScreen: function getScreen() {\n      return require(\"./PathsScreen\").default;\n    }\n  }\n});\nvar AvatarNavigator = createStackNavigator({\n  Avatar: {\n    getScreen: function getScreen() {\n      return require(\"./AvatarScreen\").default;\n    }\n  }\n});\nvar IntroNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./Intro\").default;\n    }\n  }\n});\nvar ArticleNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./article\").default;\n    }\n  }\n});\nvar CategoriesNavigator = createStackNavigator({\n  Intro: {\n    getScreen: Categories\n  }\n});\nvar ChooseAGameNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./ChooseAGame\").default;\n    }\n  }\n});\nvar JoinAGameNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./JoinAGame\").default;\n    }\n  }\n});\nvar TheMoleGameNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./TheMoleGame\").default;\n    }\n  }\n});\nvar MyOpenGamesNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./MyOpenGames\").default;\n    }\n  }\n});\nvar LoserNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./loserScreen\").default;\n    }\n  }\n});\nvar WinnerNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./winnerScreen\").default;\n    }\n  }\n});\nvar GamesWonNavigator = createStackNavigator({\n  Intro: {\n    getScreen: function getScreen() {\n      return require(\"./GamesWon\").default;\n    }\n  }\n});\nvar SettingsNavigator = createStackNavigator({\n  Settings: {\n    getScreen: function getScreen() {\n      return require(\"./SettingsScreen\").default;\n    }\n  }\n}, {\n  navigationOptions: {\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }),\n    headerTitleStyle: {\n      color: '#000'\n    }\n  }\n});\nvar AppNavigator = createSwitchNavigator({\n  Splash: {\n    getScreen: function getScreen() {\n      return require(\"./Splash\").default;\n    }\n  },\n  Auth: AuthNavigator,\n  Avatar: AvatarNavigator,\n  Profile: ProfileNavigator,\n  Intro: IntroNavigator,\n  Settings: SettingsNavigator,\n  Article: ArticleNavigator,\n  Categories: {\n    getScreen: function getScreen() {\n      return require(\"./CategoriesScreen\").default;\n    }\n  },\n  BombShop: BombNavigator,\n  Paths: PathsNavigator,\n  ChooseAGame: ChooseAGameNavigator,\n  GameBoard: TheMoleGameNavigator,\n  JoinGame: {\n    getScreen: function getScreen() {\n      return require(\"./JoinAGame\").default;\n    }\n  },\n  MyOpenGames: MyOpenGamesNavigator,\n  Winner: WinnerNavigator,\n  Loser: LoserNavigator,\n  GamesWon: GamesWonNavigator,\n  Leaderboard: LeaderboardNavigator\n}, {\n  initialRouteName: 'Splash'\n});\nvar AppContainer = createAppContainer(AppNavigator);\n\nvar Navigation = function (_Component) {\n  _inherits(Navigation, _Component);\n\n  var _super = _createSuper(Navigation);\n\n  function Navigation() {\n    _classCallCheck(this, Navigation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Navigation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 16\n        }\n      });\n    }\n  }]);\n\n  return Navigation;\n}(Component);\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/index.js"],"names":["createAppContainer","createStackNavigator","createSwitchNavigator","createBottomTabNavigator","React","Component","NetworkHeader","Categories","AuthNavigator","Login","getScreen","require","default","navigationOptions","header","ProfileNavigator","Profile","BombNavigator","BombShop","LeaderboardNavigator","Intro","PathsNavigator","AvatarNavigator","Avatar","IntroNavigator","ArticleNavigator","CategoriesNavigator","ChooseAGameNavigator","JoinAGameNavigator","TheMoleGameNavigator","MyOpenGamesNavigator","LoserNavigator","WinnerNavigator","GamesWonNavigator","SettingsNavigator","Settings","headerBackground","headerTitleStyle","color","AppNavigator","Splash","Auth","Article","Paths","ChooseAGame","GameBoard","JoinGame","MyOpenGames","Winner","Loser","GamesWon","Leaderboard","initialRouteName","AppContainer","Navigation"],"mappings":"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","sourcesContent":["import {createAppContainer,createStackNavigator,createSwitchNavigator,createBottomTabNavigator} from 'react-navigation';\nimport React,{Component} from 'react';\nimport NetworkHeader from '../common/NetworkHeader'\nimport Categories from './CategoriesScreen';\n//Auth screen (only if the player isn't signed in)\nconst AuthNavigator = createStackNavigator(\n    {\n        Login:{\n            getScreen: ()=>require('./LoginScreen').default,\n        }\n    },\n    {\n        navigationOptions:{\n           header:null,\n        },\n    },\n)\n\n//user profile \nconst ProfileNavigator = createStackNavigator(\n    {\n        Profile: {\n            getScreen: ()=>require('./ProfileScreen').default,\n        },\n    },\n)\n\nconst BombNavigator = createStackNavigator(\n    {\n        BombShop: {\n            getScreen: ()=>require('./BombShop').default,\n        },\n    },\n)\n\nconst LeaderboardNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=>require('./Leaderboard').default,\n        },\n    },\n)\n\nconst PathsNavigator = createStackNavigator(\n    {\n        BombShop: {\n            getScreen: ()=>require('./PathsScreen').default,\n        },\n    },\n)\n\nconst AvatarNavigator = createStackNavigator(\n    {\n        Avatar: {\n            getScreen: ()=> require('./AvatarScreen').default,\n        }\n    }\n)\n//walkthrough game introduction . . .\nconst IntroNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./Intro').default,\n        }\n    }\n)\n\n//Article screen\nconst ArticleNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./article').default,\n        }\n    }\n)\n\n//Categories screen\nconst CategoriesNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen:Categories,\n        }\n    }\n)\n//Choose a Game screen\nconst ChooseAGameNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./ChooseAGame').default,\n        }\n    }\n)\n//Join a  game screen\nconst JoinAGameNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./JoinAGame').default,\n        }\n    }\n)\n//Game Board Screen\nconst TheMoleGameNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./TheMoleGame').default,\n        }\n    }\n)\n//my opened games screen \nconst MyOpenGamesNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./MyOpenGames').default,\n        }\n    }\n)\n//loser screen \nconst LoserNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./loserScreen').default,\n        }\n    }\n)\n//winner screen \nconst WinnerNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./winnerScreen').default,\n        }\n    }\n)\n//games won screen \nconst GamesWonNavigator = createStackNavigator(\n    {\n        Intro: {\n            getScreen: ()=> require('./GamesWon').default,\n        }\n    }\n)\n//settings screen . . .\nconst SettingsNavigator = createStackNavigator(\n    {\n        Settings: {\n            getScreen: ()=> require('./SettingsScreen').default,\n        }\n    },\n    {\n    navigationOptions: {\n        headerBackground: (\n          <NetworkHeader/>\n        ),\n        headerTitleStyle: { color: '#000' },\n      }\n    },\n)\n\n\n//using switch navigator for better performence\nconst AppNavigator = createSwitchNavigator(\n    {\n        Splash:{\n            getScreen:()=>require('./Splash').default,\n        },\n        Auth: AuthNavigator,\n        Avatar: AvatarNavigator,\n        Profile:ProfileNavigator,\n        Intro:IntroNavigator,\n        Settings:SettingsNavigator,\n        Article:ArticleNavigator,\n        //Categories:CategoriesNavigator,\n        Categories:{\n            getScreen:()=>require('./CategoriesScreen').default,\n        },\n        BombShop:BombNavigator,\n        Paths:PathsNavigator,\n        ChooseAGame:ChooseAGameNavigator,\n        GameBoard:TheMoleGameNavigator,\n        JoinGame: {\n            getScreen: ()=> require('./JoinAGame').default,\n        },\n        MyOpenGames:MyOpenGamesNavigator,\n        Winner:WinnerNavigator,\n        Loser:LoserNavigator,\n        GamesWon:GamesWonNavigator,\n        Leaderboard:LeaderboardNavigator\n    },{\n        initialRouteName:'Splash',\n    }\n)\n\n//warp with app container\nconst AppContainer = createAppContainer(AppNavigator);\nclass Navigation extends Component{\n    render(){\n        return <AppContainer />;\n    }\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}