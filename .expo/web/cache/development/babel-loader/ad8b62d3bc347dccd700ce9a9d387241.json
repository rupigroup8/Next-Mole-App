{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-indicators/src/components/pacman-indicator/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Indicator from \"../indicator\";\nimport styles from \"./styles\";\n\nvar PacmanIndicator = function (_PureComponent) {\n  _inherits(PacmanIndicator, _PureComponent);\n\n  var _super = _createSuper(PacmanIndicator);\n\n  function PacmanIndicator(props) {\n    var _this;\n\n    _classCallCheck(this, PacmanIndicator);\n\n    _this = _super.call(this, props);\n    _this.renderComponent = _this.renderComponent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PacmanIndicator, [{\n    key: \"renderBlock\",\n    value: function renderBlock(_ref) {\n      var index = _ref.index,\n          count = _ref.count,\n          progress = _ref.progress;\n      var _this$props = this.props,\n          size = _this$props.size,\n          backgroundColor = _this$props.color;\n      var style = {\n        position: 'absolute',\n        top: size / 2 - size / 16,\n        left: size / 2 + size / 16 + (index - 2) * size / 4,\n        width: size / 8,\n        height: size / 8,\n        borderRadius: size / 16,\n        backgroundColor: backgroundColor,\n        transform: [{\n          translateX: progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, size / (I18nManager.isRTL ? 4 : -4)]\n          })\n        }, {\n          scale: count === index + 1 ? progress.interpolate({\n            inputRange: [0, 0.67, 1],\n            outputRange: [0, 1, 1]\n          }) : 1\n        }]\n      };\n\n      if (count === index + 1) {\n        style.opacity = progress.interpolate({\n          inputRange: [0, 0.67, 1],\n          outputRange: [0, 1, 1]\n        });\n      }\n\n      return React.createElement(Animated.View, {\n        style: style,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(_ref2) {\n      var index = _ref2.index,\n          count = _ref2.count,\n          progress = _ref2.progress;\n      var _this$props2 = this.props,\n          size = _this$props2.size,\n          backgroundColor = _this$props2.color;\n\n      if (index > 1) {\n        return this.renderBlock({\n          index: index,\n          count: count,\n          progress: progress\n        });\n      }\n\n      var pacmanStyle = {\n        position: 'absolute',\n        top: size / 4,\n        left: 0,\n        width: size / 2,\n        height: size / 2,\n        transform: [{\n          rotate: progress.interpolate({\n            inputRange: [0, 0.67, 1],\n            outputRange: index ^ I18nManager.isRTL ? ['0deg', '45deg', '0deg'] : ['0deg', '-45deg', '0deg']\n          })\n        }]\n      };\n      var containerStyle = {\n        width: size / 2,\n        height: size / 4,\n        overflow: 'hidden'\n      };\n      var style = {\n        width: size / 2,\n        height: size / 2,\n        borderRadius: size / 4,\n        backgroundColor: backgroundColor\n      };\n\n      if (index) {\n        containerStyle.top = size / 4;\n        style.top = -size / 4;\n      }\n\n      return React.createElement(Animated.View, {\n        style: pacmanStyle,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: containerStyle,\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          style = _this$props3.style,\n          size = _this$props3.size,\n          props = _objectWithoutProperties(_this$props3, [\"style\", \"size\"]);\n\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, React.createElement(Indicator, _extends({\n        style: {\n          width: size * 1.25,\n          height: size\n        },\n        renderComponent: this.renderComponent\n      }, props, {\n        count: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return PacmanIndicator;\n}(PureComponent);\n\nPacmanIndicator.defaultProps = {\n  animationDuration: 600,\n  color: 'rgb(0, 0, 0)',\n  size: 48\n};\nPacmanIndicator.propTypes = _objectSpread(_objectSpread({}, Indicator.propTypes), {}, {\n  color: PropTypes.string,\n  size: PropTypes.number\n});\nexport { PacmanIndicator as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-indicators/src/components/pacman-indicator/index.js"],"names":["PropTypes","React","PureComponent","Indicator","styles","PacmanIndicator","props","renderComponent","bind","index","count","progress","size","backgroundColor","color","style","position","top","left","width","height","borderRadius","transform","translateX","interpolate","inputRange","outputRange","I18nManager","isRTL","scale","opacity","renderBlock","pacmanStyle","rotate","containerStyle","overflow","container","defaultProps","animationDuration","propTypes","string","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { View, Animated, I18nManager } from 'react-native';\n\nimport Indicator from '../indicator';\nimport styles from './styles';\n\nexport default class PacmanIndicator extends PureComponent {\n  static defaultProps = {\n    animationDuration: 600,\n\n    color: 'rgb(0, 0, 0)',\n    size: 48,\n  };\n\n  static propTypes = {\n    ...Indicator.propTypes,\n\n    color: PropTypes.string,\n    size: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderComponent = this.renderComponent.bind(this);\n  }\n\n  renderBlock({ index, count, progress }) {\n    let { size, color: backgroundColor } = this.props;\n\n    let style = {\n      position: 'absolute',\n      top: size / 2 - size / 16,\n      left: size / 2 + size / 16 + (index - 2) * size / 4,\n      width: size / 8,\n      height: size / 8,\n      borderRadius: size / 16,\n      backgroundColor,\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, size / (I18nManager.isRTL? 4 : -4)],\n        }),\n      }, {\n        scale: count === index + 1?\n          progress.interpolate({\n            inputRange: [0, 0.67, 1],\n            outputRange: [0, 1, 1],\n          }):\n          1,\n      }],\n    };\n\n    if (count === index + 1) {\n      style.opacity = progress.interpolate({\n        inputRange: [0, 0.67, 1],\n        outputRange: [0, 1, 1],\n      });\n    }\n\n    return (\n      <Animated.View style={style} key={index} />\n    );\n  }\n\n  renderComponent({ index, count, progress }) {\n    let { size, color: backgroundColor } = this.props;\n\n    if (index > 1) {\n      return this.renderBlock({ index, count, progress });\n    }\n\n    let pacmanStyle = {\n      position: 'absolute',\n\n      top: size / 4,\n      left: 0,\n      width: size / 2,\n      height: size / 2,\n\n      transform: [{\n        rotate: progress.interpolate({\n          inputRange: [0, 0.67, 1],\n          outputRange: (index ^ I18nManager.isRTL)?\n            ['0deg',  '45deg', '0deg']:\n            ['0deg', '-45deg', '0deg'],\n        }),\n      }],\n    };\n\n    let containerStyle = {\n      width: size / 2,\n      height: size / 4,\n      overflow: 'hidden',\n    };\n\n    let style = {\n      width: size / 2,\n      height: size / 2,\n      borderRadius: size / 4,\n      backgroundColor,\n    };\n\n    if (index) {\n      containerStyle.top = size / 4;\n      style.top = -size / 4;\n    }\n\n    return (\n      <Animated.View style={pacmanStyle} key={index}>\n        <View style={containerStyle} collapsable={false}>\n          <Animated.View style={style} />\n        </View>\n      </Animated.View>\n    );\n  }\n\n  render() {\n    let { style, size, ...props } = this.props;\n\n    return (\n      <View style={[styles.container, style]}>\n        <Indicator\n          style={{ width: size * 1.25, height: size }}\n          renderComponent={this.renderComponent}\n          {...props}\n          count={5}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}