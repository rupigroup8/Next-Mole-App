{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/PathsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Icon, Text } from 'native-base';\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { images } from \"../../src/constant/images\";\nimport { Box } from 'react-native-design-utility';\nimport WikiLoader from \"../common/WikiLoader\";\nvar newStateArray = [];\nvar styles;\n\nif (Platform.OS === 'ios') {\n  styles = StyleSheet.create({\n    container1: {\n      paddingTop: 15,\n      borderRadius: 50,\n      zIndex: 4\n    },\n    container2: {\n      paddingTop: 15,\n      borderRadius: 50,\n      zIndex: 4\n    },\n    autocompleteContainer: {\n      marginLeft: 10,\n      marginRight: 10\n    },\n    itemText: {\n      fontSize: 22,\n      margin: 1,\n      color: '#3C4037'\n    },\n    infoText: {\n      textAlign: 'center'\n    },\n    list: {\n      borderColor: \"grey\",\n      borderWidth: 0.6,\n      borderStyle: 'solid',\n      backgroundColor: '#C0DDD9',\n      position: 'relative'\n    },\n    openingText: {\n      textAlign: 'center'\n    },\n    textInputStyle: {\n      height: 40,\n      borderColor: 'grey',\n      borderWidth: 1,\n      margin: '5%',\n      padding: 10,\n      borderRadius: 10\n    },\n    title: {\n      textAlign: 'center'\n    }\n  });\n} else {\n  styles = StyleSheet.create({\n    container1: {\n      flex: 0.3,\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 50,\n      paddingTop: 15,\n      borderRadius: 50,\n      marginBottom: 5,\n      zIndex: 1\n    },\n    container2: {\n      flex: 0.3,\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 100,\n      paddingTop: 15,\n      borderRadius: 50,\n      marginBottom: 5,\n      zIndex: 1\n    },\n    autocompleteContainer: {\n      marginLeft: 20,\n      marginRight: 20,\n      position: 'relative',\n      zIndex: 2\n    },\n    itemText: {\n      fontSize: 22,\n      margin: 1,\n      color: '#3C4037'\n    },\n    infoText: {\n      textAlign: 'center'\n    },\n    list: {\n      borderColor: \"grey\",\n      borderWidth: 0.6,\n      borderStyle: 'solid',\n      backgroundColor: '#C0DDD9',\n      flex: 1,\n      zIndex: 2\n    },\n    openingText: {\n      textAlign: 'center'\n    },\n    textInputStyle: {\n      height: 40,\n      borderColor: 'grey',\n      borderWidth: 1,\n      margin: '5%',\n      padding: 10,\n      borderRadius: 10\n    },\n    title: {\n      textAlign: 'center'\n    }\n  });\n}\n\nvar Paths = function (_React$Component) {\n  _inherits(Paths, _React$Component);\n\n  var _super = _createSuper(Paths);\n\n  function Paths() {\n    var _this;\n\n    _classCallCheck(this, Paths);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      path: [],\n      paths: [],\n      articles: [],\n      secondArticles: [],\n      query: '',\n      secondQuery: '',\n      isReady: true,\n      isButtonReady: true\n    };\n\n    _this.FirstOpenSearchWiki = function (text) {\n      var serachTerm = text;\n      var API = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=' + serachTerm + '&limit=10&namespace=0&format=json';\n\n      if (serachTerm.length > 0) {\n        console.log(serachTerm);\n        console.log(API);\n        fetch(API).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          console.log(data[1]);\n\n          _this.setState({\n            articles: data[1],\n            query: text,\n            isButtonReady: _this.state.secondQuery.length > 0 ? false : true\n          });\n        });\n      }\n    };\n\n    _this.SecondOpenSearchWiki = function (text) {\n      var serachTerm = text;\n      var API = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=' + serachTerm + '&limit=10&namespace=0&format=json';\n\n      if (serachTerm.length > 0) {\n        fetch(API).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          console.log(data[1]);\n\n          _this.setState({\n            secondArticles: data[1],\n            secondQuery: text,\n            isButtonReady: _this.state.query.length > 0 ? false : true\n          });\n        });\n      }\n    };\n\n    _this.SearchPath = function () {\n      _this.setState({\n        isReady: false\n      }, function () {\n        var end = '?source=' + _this.state.query + '&target=' + _this.state.secondQuery + '';\n        var pathsUri = 'http://proj.ruppin.ac.il/bgroup65/prod/api/SIXDOW' + end;\n        fetch(pathsUri).then(function (response) {\n          return response.json();\n        }).then(function _callee(data) {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.setState({\n                    paths: data,\n                    path: []\n                  }, function () {\n                    newStateArray = [];\n                    var originalArrayForSort = [];\n\n                    for (var i = 0; i < _this.state.paths.length; i++) {\n                      if (i % 2 == 0) {\n                        console.log(_this.state.paths[i]);\n                        originalArrayForSort.push(_this.state.paths[i]);\n\n                        _this.GetData(_this.state.paths[i], i);\n                      }\n                    }\n                  });\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      });\n    };\n\n    _this.GetData = function (article, index) {\n      var API = 'https://en.wikipedia.org/w/api.php?action=query&titles=' + article + '&prop=pageimages&format=json&pithumbsize=100';\n      fetch(API).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var pageid = Object.keys(data.query.pages)[0];\n\n        if (data.query.pages[pageid].missing === \"\") {\n          Alert.alert('Problem', 'SorryðŸ˜ž a problem occurred while trying to search for a path');\n          return;\n        }\n\n        fullWikiUri = 'https://en.wikipedia.org/wiki/';\n        var wiki = data.query.pages[pageid].title;\n        fullWikiUri = fullWikiUri + wiki;\n        var pic = 'https://www.freeiconspng.com/uploads/no-image-icon-4.png';\n\n        if (typeof data.query.pages[pageid].thumbnail !== \"undefined\") {\n          pic = data.query.pages[pageid].thumbnail.source;\n        }\n\n        var wikiArticleForList = {\n          name: data.query.pages[pageid].title,\n          avatar_url: pic,\n          wikiUrl: fullWikiUri,\n          index: index\n        };\n        newStateArray.push(wikiArticleForList);\n      }).then(function () {\n        console.log(newStateArray);\n        newStateArray.sort(function (num1, num2) {\n          return num1.index < num2.index ? -1 : 1;\n        });\n        console.log(newStateArray);\n\n        _this.setState({\n          isReady: true\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Paths, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comp = function comp(a, b) {\n        return a.toLowerCase().trim() === b.toLowerCase().trim();\n      };\n\n      if (!this.state.isReady) {\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }\n        }, React.createElement(WikiLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        flex: 1,\n        style: {\n          marginTop: '4%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          marginTop: '5%',\n          fontSize: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }\n      }, \"Find the shortest path\", \"\\n\\n\", \"From\"), React.createElement(View, {\n        style: styles.container1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, React.createElement(Autocomplete, {\n        listStyle: styles.list,\n        autoCapitalize: \"words\",\n        autoCorrect: false,\n        containerStyle: styles.autocompleteContainer,\n        data: this.state.articles.length === 1 && comp(query, this.state.articles[0]) ? [] : this.state.articles,\n        defaultValue: this.state.query,\n        onChangeText: function onChangeText(text) {\n          return _this2.FirstOpenSearchWiki(text);\n        },\n        renderItem: function renderItem(wikiTitle) {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.setState({\n                query: wikiTitle,\n                articles: []\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: styles.itemText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }\n          }, wikiTitle));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 24,\n          marginTop: '3%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, \"To\"), React.createElement(View, {\n        style: styles.container2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, React.createElement(Autocomplete, {\n        listStyle: styles.list,\n        autoCapitalize: \"words\",\n        autoCorrect: false,\n        containerStyle: styles.autocompleteContainer,\n        data: this.state.secondArticles.length === 1 && comp(query, this.state.secondArticles[0]) ? [] : this.state.secondArticles,\n        defaultValue: this.state.secondQuery,\n        onChangeText: function onChangeText(text) {\n          return _this2.SecondOpenSearchWiki(text);\n        },\n        renderItem: function renderItem(wikiTitle) {\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.setState({\n                secondQuery: wikiTitle,\n                secondArticles: []\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: styles.itemText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }\n          }, wikiTitle));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        flex: 1,\n        style: {\n          margin: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        disabled: this.state.isButtonReady,\n        style: {\n          backgroundColor: \"#81BFAF\"\n        },\n        onPress: this.SearchPath,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      }, \"Let's Go!\")), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }\n      }, newStateArray.map(function (l, i) {\n        return React.createElement(ListItem, {\n          onPress: function onPress() {\n            return Linking.openURL(l.wikiUrl);\n          },\n          key: i,\n          leftAvatar: React.createElement(Avatar, {\n            source: {\n              uri: l.avatar_url\n            },\n            size: \"medium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 45\n            }\n          }),\n          title: l.name,\n          subtitle: l.subtitle,\n          rightIcon: React.createElement(Icon, {\n            name: \"ios-infinite\",\n            style: {\n              fontSize: 25,\n              color: '#AE81FE'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 37\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }\n        });\n      })))));\n    }\n  }]);\n\n  return Paths;\n}(React.Component);\n\nPaths.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerTitle: React.createElement(Image, {\n      style: {\n        width: 220,\n        height: 39\n      },\n      source: images.SIXDOW,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }),\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }),\n    headerTitleStyle: {\n      color: '#4D5F66',\n      fontSize: 23\n    },\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Profile');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 14\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#403773\",\n        fontSize: 35\n      },\n      name: \"ios-arrow-round-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }))\n  };\n};\n\nexport { Paths as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/PathsScreen.js"],"names":["React","Component","Button","Icon","Text","NetworkHeader","Autocomplete","ListItem","Avatar","images","Box","WikiLoader","newStateArray","styles","Platform","OS","StyleSheet","create","container1","paddingTop","borderRadius","zIndex","container2","autocompleteContainer","marginLeft","marginRight","itemText","fontSize","margin","color","infoText","textAlign","list","borderColor","borderWidth","borderStyle","backgroundColor","position","openingText","textInputStyle","height","padding","title","flex","left","right","top","marginBottom","Paths","state","path","paths","articles","secondArticles","query","secondQuery","isReady","isButtonReady","FirstOpenSearchWiki","text","serachTerm","API","length","console","log","fetch","then","response","json","data","setState","SecondOpenSearchWiki","SearchPath","end","pathsUri","originalArrayForSort","i","push","GetData","article","index","pageid","Object","keys","pages","missing","Alert","alert","fullWikiUri","wiki","pic","thumbnail","source","wikiArticleForList","name","avatar_url","wikiUrl","sort","num1","num2","comp","a","b","toLowerCase","trim","marginTop","wikiTitle","fontWeight","map","l","Linking","openURL","uri","subtitle","navigationOptions","navigation","headerTitle","width","SIXDOW","headerBackground","headerTitleStyle","headerLeft","navigate","elevation"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\nimport {Alert,Platform,Image, StyleSheet,View ,TouchableOpacity,Linking,ScrollView} from \"react-native\";\nimport {Button,Icon, Text} from 'native-base';\nimport  NetworkHeader from '../common/NetworkHeader';\nimport Autocomplete from 'react-native-autocomplete-input';\nimport { ListItem,Avatar } from 'react-native-elements'\nimport { images } from \"../../src/constant/images\";\nimport {Box} from 'react-native-design-utility';\nimport WikiLoader from '../common/WikiLoader';\n\n\nlet newStateArray = [];\nlet styles;\nif (Platform.OS==='ios') {\n    styles = StyleSheet.create({\n        container1: {\n            paddingTop: 15,\n            borderRadius:50,\n            //marginBottom:50,\n            zIndex:4\n          },\n          container2: {\n            paddingTop: 15,\n            borderRadius:50,\n            //marginBottom:50,\n            zIndex:4\n          },\n          autocompleteContainer: {\n            marginLeft: 10,\n            marginRight: 10,\n          },\n          itemText: {\n            fontSize: 22,\n            margin: 1,\n            color:'#3C4037'\n          },\n    \n          infoText: {\n            textAlign: 'center'\n          },\n          list:{\n            borderColor:\"grey\",\n            borderWidth:0.6,\n            borderStyle:'solid',\n            backgroundColor:'#C0DDD9',\n            position:'relative'\n          },\n          openingText: {\n            textAlign: 'center'\n          },\n            textInputStyle:{\n                height:40,\n                borderColor:'grey',\n                borderWidth:1,\n                margin:'5%',\n                padding:10,\n                borderRadius:10\n            },\n            title:{\n                textAlign:'center',\n    \n            }\n    })\n}\nelse{\n    styles = StyleSheet.create({\n        container1: {\n            flex: 0.3,\n            left: 0,\n            position: 'absolute',\n            right: 0,\n            top: 50,\n            paddingTop: 15,\n            borderRadius:50,\n            marginBottom:5,\n            zIndex:1\n          },\n          container2: {\n            flex: 0.3,\n            left: 0,\n            position: 'absolute',\n            right: 0,\n            top: 100,\n            paddingTop: 15,\n            borderRadius:50,\n            marginBottom:5,\n            zIndex:1\n          },\n          autocompleteContainer: {\n            marginLeft: 20,\n            marginRight: 20,\n            position:'relative',\n            zIndex:2,\n          },\n          itemText: {\n            fontSize: 22,\n            margin: 1,\n            color:'#3C4037'\n          },\n    \n          infoText: {\n            textAlign: 'center'\n          },\n          list:{\n            borderColor:\"grey\",\n            borderWidth:0.6,\n            borderStyle:'solid',\n            backgroundColor:'#C0DDD9',\n            //position:'absolute',\n            flex:1,\n            zIndex:2\n          },\n          openingText: {\n            textAlign: 'center'\n          },\n            textInputStyle:{\n                height:40,\n                borderColor:'grey',\n                borderWidth:1,\n                margin:'5%',\n                padding:10,\n                borderRadius:10\n            },\n            title:{\n                textAlign:'center',\n    \n            }\n    })\n}\n\n\nexport default class Paths extends React.Component{\n\n    static navigationOptions = ({ navigation }) =>{\n        return{\n            headerTitle: (\n                <Image style={{ width: 220, height: 39 }} source={images.SIXDOW}/>\n            ),\n          headerBackground: (\n            <NetworkHeader/>\n          ),\n          headerTitleStyle: { color: '#4D5F66',fontSize:23 },\n          headerLeft: \n           ( <Button\n              onPress={()=>navigation.navigate('Profile')}\n              style={{backgroundColor:\"transparent\",elevation:0}}>\n              <Icon  style={{color:\"#403773\",fontSize:35}}  name=\"ios-arrow-round-back\" />\n            </Button>\n           ),\n          }\n        }\n    state={\n        path:[],\n        paths:[],\n        articles: [],\n        secondArticles:[],\n        query: '',\n        secondQuery:'',\n        isReady:true,\n        isButtonReady:true,\n    }\n    FirstOpenSearchWiki = (text)=>{\n        const serachTerm = text;\n        const API = 'https://en.wikipedia.org/w/api.php?action=opensearch&search='+serachTerm+'&limit=10&namespace=0&format=json';\n        if (serachTerm.length>0) {\n            console.log(serachTerm);\n            console.log(API);\n            fetch(API)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data[1]);\n                this.setState({ \n                articles:data[1],\n                query: text,\n                isButtonReady:this.state.secondQuery.length>0 ? false : true\n                })\n          })\n        }\n        \n    }\n\n    SecondOpenSearchWiki = (text)=>{\n        const serachTerm = text;\n        const API = 'https://en.wikipedia.org/w/api.php?action=opensearch&search='+serachTerm+'&limit=10&namespace=0&format=json';\n\n        if (serachTerm.length>0) {\n        //console.log(serachTerm);\n        //console.log(API);\n        fetch(API)\n          .then(response => response.json())\n          .then(data => {\n            console.log(data[1]);\n            this.setState({ \n                secondArticles:data[1],\n                secondQuery: text,\n                isButtonReady:this.state.query.length>0 ? false : true\n             })\n          })\n        }\n    }\n    SearchPath = ()=>{   \n        this.setState({\n            isReady:false\n        },()=>{ \n        //let source = this.state.query.replace(' ','%20').toString();\n        //let target = this.state.secondQuery.replace(' ','%20').toString();\n        let end = '?source='+this.state.query+'&target='+this.state.secondQuery+'';\n        let pathsUri = 'http://proj.ruppin.ac.il/bgroup65/prod/api/SIXDOW'+end;\n        fetch(pathsUri)\n          .then((response) => response.json())\n          .then(async (data) => {\n            this.setState({\n                paths:data,\n                path:[],\n            },()=>\n            {\n                    newStateArray = [];\n                    let originalArrayForSort=[];\n                    //console.log(this.state.paths)\n                    for (let i = 0; i < this.state.paths.length; i++) {\n                            if(i%2==0){\n                                console.log(this.state.paths[i]);\n                                originalArrayForSort.push(this.state.paths[i]);\n                                this.GetData(this.state.paths[i],i);\n                            }\n                    }\n  \n                })\n            })\n        })\n    }\n    GetData = (article,index)=>{\n        //console.log(article)\n        let API = 'https://en.wikipedia.org/w/api.php?action=query&titles='+article+'&prop=pageimages&format=json&pithumbsize=100';\n        //console.log(API);\n        fetch(API)\n        \n            .then(response => response.json())\n            .then(data => {\n                        //getting the page id for extracting information about the article \n                        var pageid = Object.keys(data.query.pages)[0];\n                       \n                        //console.log(data.query.pages[pageid].title);\n\n                        if (data.query.pages[pageid].missing === \"\") {\n                            Alert.alert('Problem','SorryðŸ˜ž a problem occurred while trying to search for a path')\n                            return;\n                        }\n                    \n                        //getting the full url to redirect user onPress\n                        fullWikiUri = 'https://en.wikipedia.org/wiki/';\n                        let wiki = data.query.pages[pageid].title;\n                        fullWikiUri = fullWikiUri + wiki;\n                        let pic = 'https://www.freeiconspng.com/uploads/no-image-icon-4.png';\n                        if (typeof data.query.pages[pageid].thumbnail !== \"undefined\") {\n                            pic = data.query.pages[pageid].thumbnail.source;\n                        }\n                        \n                        //updating the list to be rendered\n                        \n                        let wikiArticleForList = {\n                            name:data.query.pages[pageid].title,\n                            avatar_url:pic,\n                            wikiUrl:fullWikiUri,\n                            index:index\n                        }\n\n                        newStateArray.push(wikiArticleForList);\n                            \n                    })\n                .then(()=>{\n                        console.log(newStateArray);\n                        newStateArray.sort((num1, num2) => num1.index < num2.index ? -1 : 1);\n                        console.log(newStateArray);\n                        this.setState({\n                            //path:newStateArray,\n                            isReady:true\n                        })\n                })\n    }\n    render(){\n        const comp = (a, b) => a.toLowerCase().trim() === b.toLowerCase().trim();\n        if (!this.state.isReady) {\n            return(\n              <Box f={1} center bg=\"white\">\n                <WikiLoader/>\n              </Box>\n            )\n          }\n        return(\n            <View flex={1} style={{marginTop:'4%'}}>\n                <Text style={{textAlign:'center',marginTop:'5%',fontSize:24}}>Find the shortest path{\"\\n\\n\"}From</Text>\n\n                <View style={styles.container1}>\n                    <Autocomplete\n                    listStyle={styles.list}\n                    autoCapitalize=\"words\"\n                    autoCorrect={false}\n                    containerStyle={styles.autocompleteContainer}\n                    data={this.state.articles.length === 1 && comp(query, this.state.articles[0]) ? [] : this.state.articles}\n                    defaultValue={this.state.query}\n                    onChangeText={text => this.FirstOpenSearchWiki(text)}\n                    renderItem={(wikiTitle) => (\n                        <TouchableOpacity onPress={() => this.setState({ query: wikiTitle,articles:[]})}>\n                            <Text style={styles.itemText}>\n                                {wikiTitle}\n                            </Text>\n                        </TouchableOpacity>\n                    )}\n                    />\n                </View>\n                <Text style={{textAlign:'center',fontSize:24,marginTop:'3%'}}>To</Text>\n                <View style={styles.container2}>\n                    <Autocomplete\n                    listStyle={styles.list}\n                    autoCapitalize=\"words\"\n                    autoCorrect={false}\n                    containerStyle={styles.autocompleteContainer}\n                    data={this.state.secondArticles.length === 1 && comp(query, this.state.secondArticles[0]) ? [] : this.state.secondArticles}\n                    defaultValue={this.state.secondQuery}\n                    onChangeText={text => this.SecondOpenSearchWiki(text)}\n                    renderItem={(wikiTitle) => (\n                        <TouchableOpacity onPress={() => this.setState({ secondQuery: wikiTitle,secondArticles:[] })}>\n                            <Text style={styles.itemText}>\n                                {wikiTitle}\n                            </Text>\n                        </TouchableOpacity>\n                    )}\n                    />\n                </View>\n                <View flex={1} style={{margin:\"5%\"}}>\n                    <Button disabled={this.state.isButtonReady} style={{backgroundColor:\"#81BFAF\"}} onPress={this.SearchPath} block >\n                        <Text style={{fontSize:25,fontWeight:'bold'}}>Let's Go!</Text>\n                    </Button>\n                    <ScrollView>\n                        <View>\n                        {\n                            newStateArray.map((l, i) => (\n                            <ListItem\n                                onPress={()=> Linking.openURL(l.wikiUrl)}\n                                key={i}\n                                leftAvatar={<Avatar\n                                    source={ {uri: l.avatar_url} }\n                                    size=\"medium\"\n                                />}\n                                title={l.name}\n                                subtitle={l.subtitle}\n                                rightIcon={\n                                    <Icon \n                                    name='ios-infinite'\n                                    style={{fontSize: 25, color: '#AE81FE'}}\n                                    />\n                                }\n                            />\n                            ))\n                        }\n                        </View>\n                    </ScrollView>\n                </View>\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}