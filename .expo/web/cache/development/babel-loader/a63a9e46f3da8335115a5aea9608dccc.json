{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/CategoriesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { FlatGrid } from 'react-native-super-grid';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, Icon } from 'native-base';\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport firebase from 'firebase';\nimport NotificationPopupToShow from \"../constant/notificationPopUp\";\nimport { images } from \"../constant/images\";\nvar STATE = {\n  OPEN: 1,\n  JOIN: 2,\n  NEXT: 4,\n  DONE: 3\n};\n\nvar Categories = function (_Component) {\n  _inherits(Categories, _Component);\n\n  var _super = _createSuper(Categories);\n\n  function Categories() {\n    var _this;\n\n    _classCallCheck(this, Categories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showPop: false,\n      category: '',\n      categories: []\n    };\n\n    _this.componentDidMount = function _callee() {\n      var response, data, categories;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://proj.ruppin.ac.il/igroup8/prod/api/Category'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              data = _context.sent;\n              categories = [];\n              data.forEach(function (element, key) {\n                categories.push({\n                  name: element.Name,\n                  code: '#27ae60',\n                  image: images.logo,\n                  id: element.Id\n                });\n              });\n\n              _this.setState({\n                categories: [].concat(categories)\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.StartANewGame = function (categoryName) {\n      _this.setState({\n        showPop: false,\n        category: categoryName\n      }, function () {\n        var ref = firebase.database().ref(\"/theMole\" + categoryName);\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n        today = dd + '/' + mm + '/' + yyyy;\n        console.log(today);\n        var user = firebase.auth().currentUser;\n        var currentGame = {\n          Date: today,\n          creator: {\n            uid: user.uid,\n            displayName: user.displayName,\n            picture: user.photoURL\n          },\n          joiner: {},\n          category: categoryName,\n          state: STATE.OPEN\n        };\n        ref.push().set(currentGame);\n\n        _this.setState({\n          showPop: true\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Categories, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        flex: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, this.state.showPop && React.createElement(NotificationPopupToShow, {\n        title: \"New Game!\",\n        category: this.state.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 36\n        }\n      }), React.createElement(FlatGrid, {\n        itemDimension: 130,\n        items: this.state.categories,\n        style: styles.gridView,\n        spacing: 20,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              key = _ref.key;\n          return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n            key: key,\n            onPress: function onPress() {\n              return _this2.StartANewGame(item.name);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }\n          }, React.createElement(ImageBackground, {\n            source: item.image,\n            style: {\n              flex: 1,\n              borderStyle: 'solid',\n              bordeeWidth: 2\n            },\n            resizeMode: \"cover\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }\n          }, React.createElement(View, {\n            style: [styles.itemContainer, {\n              borderStyle: 'solid',\n              bordeeWidth: 2\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 23\n            }\n          }))), React.createElement(Text, {\n            style: {\n              textAlign: 'center',\n              fontSize: '18px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }\n          }, item.name));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Categories;\n}(Component);\n\nCategories.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTitle: React.createElement(Image, {\n      style: {\n        width: 90,\n        height: 50,\n        flex: 1\n      },\n      resizeMode: \"contain\",\n      source: images.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }),\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }),\n    headerTitleStyle: {\n      color: '#4D5F66',\n      fontSize: 23\n    },\n    headerRight: React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }\n    }),\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('ChooseAGame');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#403773\",\n        fontSize: 32\n      },\n      name: \"ios-arrow-round-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }))\n  };\n};\n\nexport { Categories as default };\nvar styles = StyleSheet.create({\n  gridView: {\n    marginTop: 20,\n    flex: 1\n  },\n  itemContainer: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 150\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/CategoriesScreen.js"],"names":["FlatGrid","React","Component","Button","Icon","NetworkHeader","firebase","NotificationPopupToShow","images","STATE","OPEN","JOIN","NEXT","DONE","Categories","state","showPop","category","categories","componentDidMount","fetch","response","json","data","forEach","element","key","push","name","Name","code","image","logo","id","Id","setState","StartANewGame","categoryName","ref","database","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","console","log","user","auth","currentUser","currentGame","creator","uid","displayName","picture","photoURL","joiner","set","styles","gridView","item","flex","borderStyle","bordeeWidth","itemContainer","textAlign","fontSize","navigationOptions","navigation","headerTitle","width","height","headerBackground","headerTitleStyle","color","headerRight","headerLeft","navigate","backgroundColor","elevation","StyleSheet","create","marginTop","borderWidth","justifyContent","borderRadius","padding","itemName","fontWeight","itemCode"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;;;;AAEA,SAAQC,MAAR,EAAeC,IAAf,QAA0B,aAA1B;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,uBAAP;AACA,SAAQC,MAAR;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAC,CADO;AAEZC,EAAAA,IAAI,EAAC,CAFO;AAGZC,EAAAA,IAAI,EAAC,CAHO;AAIZC,EAAAA,IAAI,EAAC;AAJO,CAAd;;IAOqBC,U;;;;;;;;;;;;;;;UAoCfC,K,GAAQ;AACNC,MAAAA,OAAO,EAAC,KADF;AAENC,MAAAA,QAAQ,EAAC,EAFH;AAGNC,MAAAA,UAAU,EAAC;AAHL,K;;UAKRC,iB,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACMC,KAAK,CAAC,oDAAD,CADX;;AAAA;AACXC,cAAAA,QADW;AAAA;AAAA,+CAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAEXC,cAAAA,IAFW;AAGXL,cAAAA,UAHW,GAGE,EAHF;AAIjBK,cAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,OAAD,EAASC,GAAT,EAAiB;AAC5BR,gBAAAA,UAAU,CAACS,IAAX,CACE;AACEC,kBAAAA,IAAI,EAAEH,OAAO,CAACI,IADhB;AACsBC,kBAAAA,IAAI,EAAE,SAD5B;AACuCC,kBAAAA,KAAK,EAACvB,MAAM,CAACwB,IADpD;AACyDC,kBAAAA,EAAE,EAACR,OAAO,CAACS;AADpE,iBADF;AAKD,eAND;;AAOA,oBAAKC,QAAL,CAAc;AAACjB,gBAAAA,UAAU,YAAKA,UAAL;AAAX,eAAd;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAuBnBkB,a,GAAgB,UAACC,YAAD,EAAgB;AAE9B,YAAKF,QAAL,CAAc;AACZnB,QAAAA,OAAO,EAAC,KADI;AAEZC,QAAAA,QAAQ,EAACoB;AAFG,OAAd,EAGE,YAAI;AACJ,YAAMC,GAAG,GAAGhC,QAAQ,CAACiC,QAAT,GAAoBD,GAApB,CAAwB,aAAWD,YAAnC,CAAZ;AAEA,YAAIG,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,YAAMC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAX;AACA,YAAMC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAX;AACA,YAAMG,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAb;AAEAT,QAAAA,KAAK,GAAGE,EAAE,GAAG,GAAL,GAAWI,EAAX,GAAgB,GAAhB,GAAsBE,IAA9B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,YAAMY,IAAI,GAAG9C,QAAQ,CAAC+C,IAAT,GAAgBC,WAA7B;AACA,YAAMC,WAAW,GAAG;AAChBd,UAAAA,IAAI,EAACD,KADW;AAEhBgB,UAAAA,OAAO,EAAC;AACNC,YAAAA,GAAG,EAACL,IAAI,CAACK,GADH;AAENC,YAAAA,WAAW,EAACN,IAAI,CAACM,WAFX;AAGNC,YAAAA,OAAO,EAACP,IAAI,CAACQ;AAHP,WAFQ;AAOhBC,UAAAA,MAAM,EAAC,EAPS;AAQhB5C,UAAAA,QAAQ,EAAEoB,YARM;AAShBtB,UAAAA,KAAK,EAACN,KAAK,CAACC;AATI,SAApB;AAWE4B,QAAAA,GAAG,CAACX,IAAJ,GAAWmC,GAAX,CAAeP,WAAf;;AACA,cAAKpB,QAAL,CAAc;AACZnB,UAAAA,OAAO,EAAC;AADI,SAAd;AAGH,OA7BD;AA8BD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWC,OAAX,IAAsB,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAC,WAA/B;AAA2C,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADzB,EAEE,oBAAC,QAAD;AACE,QAAA,aAAa,EAAE,GADjB;AAEE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,UAFpB;AAGE,QAAA,KAAK,EAAE6C,MAAM,CAACC,QAHhB;AAIE,QAAA,OAAO,EAAE,EAJX;AAKE,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,cAASvC,GAAT,QAASA,GAAT;AAAA,iBACV,0CACE,oBAAC,gBAAD;AAAkB,YAAA,GAAG,EAAEA,GAAvB;AAA4B,YAAA,OAAO,EAAE;AAAA,qBAAI,MAAI,CAACU,aAAL,CAAmB6B,IAAI,CAACrC,IAAxB,CAAJ;AAAA,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,eAAD;AAAiB,YAAA,MAAM,EAAEqC,IAAI,CAAClC,KAA9B;AAAqC,YAAA,KAAK,EAAE;AAAEmC,cAAAA,IAAI,EAAE,CAAR;AAAWC,cAAAA,WAAW,EAAC,OAAvB;AAA+BC,cAAAA,WAAW,EAAC;AAA3C,aAA5C;AAA2F,YAAA,UAAU,EAAC,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE,CAACL,MAAM,CAACM,aAAR,EAAsB;AAACF,cAAAA,WAAW,EAAC,OAAb;AAAqBC,cAAAA,WAAW,EAAC;AAAjC,aAAtB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADF,EAOE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACE,cAAAA,SAAS,EAAC,QAAX;AAAoBC,cAAAA,QAAQ,EAAC;AAA7B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoDN,IAAI,CAACrC,IAAzD,CAPF,CADU;AAAA,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAsBH;;;;EAzHmC1B,S;;AAAnBY,U,CACZ0D,iB,GAAoB,iBAAmB;AAAA,MAAhBC,UAAgB,SAAhBA,UAAgB;AAC5C,SAAM;AACJC,IAAAA,WAAW,EACT,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAE,EAArB;AAAwBV,QAAAA,IAAI,EAAC;AAA7B,OAAd;AAA+C,MAAA,UAAU,EAAC,SAA1D;AAAoE,MAAA,MAAM,EAAE1D,MAAM,CAACwB,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE;AAIJ6C,IAAAA,gBAAgB,EACd,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALE;AAOJC,IAAAA,gBAAgB,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAmBR,MAAAA,QAAQ,EAAC;AAA5B,KAPd;AAQJS,IAAAA,WAAW,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MART;AASJC,IAAAA,UAAU,EACN,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAIR,UAAU,CAACS,QAAX,CAAoB,aAApB,CAAJ;AAAA,OADX;AAEE,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,aAAjB;AAA+BC,QAAAA,SAAS,EAAC;AAAzC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACL,QAAAA,KAAK,EAAC,SAAP;AAAiBR,QAAAA,QAAQ,EAAC;AAA1B,OAAb;AAA6C,MAAA,IAAI,EAAC,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAVA,GAAN;AAiBC,C;;SAnBgBzD,U;AA6HrB,IAAMiD,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC7BtB,EAAAA,QAAQ,EAAE;AACRuB,IAAAA,SAAS,EAAE,EADH;AAERrB,IAAAA,IAAI,EAAE;AAFE,GADmB;AAK7BG,EAAAA,aAAa,EAAE;AACbF,IAAAA,WAAW,EAAC,OADC;AAEbqB,IAAAA,WAAW,EAAC,CAFC;AAGbC,IAAAA,cAAc,EAAE,UAHH;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,OAAO,EAAE,EALI;AAMbf,IAAAA,MAAM,EAAE;AANK,GALc;AAa7BgB,EAAAA,QAAQ,EAAE;AACRrB,IAAAA,QAAQ,EAAE,EADF;AAERQ,IAAAA,KAAK,EAAE,MAFC;AAGRc,IAAAA,UAAU,EAAE;AAHJ,GAbmB;AAkB7BC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,UAAU,EAAE,KADJ;AAERtB,IAAAA,QAAQ,EAAE,EAFF;AAGRQ,IAAAA,KAAK,EAAE;AAHC;AAlBmB,CAAlB,CAAf","sourcesContent":["import { FlatGrid } from 'react-native-super-grid';\nimport React,{Component} from 'react';\nimport {View,StyleSheet,ImageBackground,TouchableOpacity,Text,Image} from 'react-native';\nimport {Button,Icon} from 'native-base';\nimport NetworkHeader from '../common/NetworkHeader';\nimport firebase from 'firebase';\nimport NotificationPopupToShow from \"../constant/notificationPopUp\";\nimport {images} from '../constant/images';\n\nconst STATE = {\n  OPEN:1,\n  JOIN:2,\n  NEXT:4,\n  DONE:3,\n}\n\nexport default class Categories extends Component{\n  static navigationOptions = ({ navigation }) =>{\n    return{\n      headerTitle: (\n        <Image style={{ width: 90, height: 50,flex:1}} resizeMode=\"contain\" source={images.logo}/>\n        ),\n      headerBackground: (\n        <NetworkHeader/>\n      ),\n      headerTitleStyle: { color: '#4D5F66',fontSize:23 },\n      headerRight:(<Text></Text>),\n      headerLeft: \n        ( <Button\n            onPress={()=>navigation.navigate('ChooseAGame')}\n            style={{backgroundColor:\"transparent\",elevation:0}}>\n            <Icon style={{color:\"#403773\",fontSize:32}}  name=\"ios-arrow-round-back\" />\n        </Button>\n        ),\n      }\n    }\n    // static navigationOptions = ({ navigation }) =>{\n    //     return{\n    //     headerTitle:\"Choose a category\",\n    //     headerBackground: (\n    //       <NetworkHeader/>\n    //     ),\n    //     headerTitleStyle: { color: '#4D5F66',fontSize:20,justifyContent: 'center' },\n    //     headerLeft: \n    //      ( <Button\n    //         onPress={()=>navigation.navigate('ChooseAGame')}\n    //         style={{backgroundColor:\"transparent\",elevation:0}}>\n    //           <Icon style={{color:\"#403773\",fontSize:32}}  name=\"ios-arrow-round-back\" />\n    //       </Button>\n    //      ),\n    //     }\n    //   }\n      state = {\n        showPop:false,\n        category:'',\n        categories:[]\n      }\n      componentDidMount= async ()=>{\n        const response = await fetch('http://proj.ruppin.ac.il/igroup8/prod/api/Category');\n        const data = await response.json();\n        const categories = [];\n        data.forEach((element,key) => {\n          categories.push(\n            {\n              name: element.Name, code: '#27ae60' ,image:images.logo,id:element.Id\n            }\n          )\n        });\n        this.setState({categories:[...categories]});\n        // const items = [\n        //   { name: 'CELEBRITY', code: '#27ae60' ,image:images.celebrityLogo,id:2},\n        //   { name: 'FILMS', code: '#27ae60' ,image:images.filmLogo,id:1},\n        //   { name: 'NBA', code: '#1abc9c' ,image:images.nbaLogo,id:5}, \n        //   { name: 'GENERAL KNOWLEDGE', code: '#3498db',image:images.generalKnowledgeLogo,id:3 },\n        //   { name: 'MUSIC', code: '#34495e' ,image:images.musicLogo,id:4},\n        //   { name: 'POLITICS', code: '#27ae60' ,image:images.politicsLogo,id:6},\n        //   { name: 'Game of thrones', code: '#27ae60' ,image:images.logo,id:7},\n        // ];\n      }\n      //create a new game and insert it to firebase\n      StartANewGame = (categoryName)=>{\n        //use firebase right here!\n        this.setState({\n          showPop:false,\n          category:categoryName\n        },()=>{\n          const ref = firebase.database().ref(\"/theMole\"+categoryName);\n          //creating a game:\n          let today = new Date();\n          const dd = String(today.getDate()).padStart(2, '0');\n          const mm = String(today.getMonth() + 1).padStart(2, '0');\n          const yyyy = today.getFullYear();\n\n          today = dd + '/' + mm + '/' + yyyy;\n          console.log(today);\n          const user = firebase.auth().currentUser;\n          const currentGame = {\n              Date:today,\n              creator:{\n                uid:user.uid,\n                displayName:user.displayName,\n                picture:user.photoURL\n              },\n              joiner:{},\n              category: categoryName,\n              state:STATE.OPEN\n            }\n            ref.push().set(currentGame);\n            this.setState({\n              showPop:true,\n            })\n        })\n      }\n\n      render() {\n        return (\n          <View flex={1}>\n            {this.state.showPop && <NotificationPopupToShow title=\"New Game!\" category={this.state.category}/>}\n            <FlatGrid\n              itemDimension={130}\n              items={this.state.categories}\n              style={styles.gridView}\n              spacing={20}\n              renderItem={({ item, key }) => (\n                <>\n                  <TouchableOpacity key={key} onPress={()=>this.StartANewGame(item.name)}>\n                    <ImageBackground source={item.image} style={{ flex: 1 ,borderStyle:'solid',bordeeWidth:2}} resizeMode='cover'>\n                      <View style={[styles.itemContainer,{borderStyle:'solid',bordeeWidth:2}]}>\n                      </View>\n                    </ImageBackground>\n                  </TouchableOpacity> \n                  <Text style={{textAlign:'center',fontSize:'18px'}}>{item.name}</Text>\n                </>             \n              )}\n            />\n          </View>\n        );\n    }\n}\n\n//STYLE\nconst styles = StyleSheet.create({\n    gridView: {\n      marginTop: 20,\n      flex: 1,\n    },\n    itemContainer: {\n      borderStyle:'solid',\n      borderWidth:1,\n      justifyContent: 'flex-end',\n      borderRadius: 5,\n      padding: 10,\n      height: 150,\n    },\n    itemName: {\n      fontSize: 16,\n      color: '#fff',\n      fontWeight: '600',\n    },\n    itemCode: {\n      fontWeight: '600',\n      fontSize: 12,\n      color: '#fff',\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}