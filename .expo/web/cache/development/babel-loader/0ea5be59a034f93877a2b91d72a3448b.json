{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-indicators/src/components/indicator/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RN from 'react-native/package';\n\nvar _RN$version$split$map = RN.version.split('.').map(function (item) {\n  return Number(item);\n}),\n    _RN$version$split$map2 = _slicedToArray(_RN$version$split$map, 2),\n    major = _RN$version$split$map2[0],\n    minor = _RN$version$split$map2[1];\n\nvar hasLoopSupport = !major && minor >= 45;\n\nvar Indicator = function (_PureComponent) {\n  _inherits(Indicator, _PureComponent);\n\n  var _super = _createSuper(Indicator);\n\n  function Indicator(props) {\n    var _this;\n\n    _classCallCheck(this, Indicator);\n\n    _this = _super.call(this, props);\n    _this.renderComponent = _this.renderComponent.bind(_assertThisInitialized(_this));\n    _this.startAnimation = _this.startAnimation.bind(_assertThisInitialized(_this));\n    _this.stopAnimation = _this.stopAnimation.bind(_assertThisInitialized(_this));\n    _this.state = {\n      progress: new Animated.Value(0)\n    };\n    _this.mounted = false;\n    return _this;\n  }\n\n  _createClass(Indicator, [{\n    key: \"startAnimation\",\n    value: function startAnimation() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          finished = _ref.finished;\n\n      var progress = this.state.progress;\n      var _this$props = this.props,\n          interaction = _this$props.interaction,\n          animationEasing = _this$props.animationEasing,\n          animationDuration = _this$props.animationDuration;\n\n      if (!this.mounted || false === finished) {\n        return;\n      }\n\n      var animation = Animated.timing(progress, {\n        duration: animationDuration,\n        easing: animationEasing,\n        useNativeDriver: true,\n        isInteraction: interaction,\n        toValue: 1\n      });\n\n      if (hasLoopSupport) {\n        Animated.loop(animation).start();\n      } else {\n        progress.setValue(0);\n        animation.start(this.startAnimation);\n      }\n\n      this.setState({\n        animation: animation\n      });\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation() {\n      var animation = this.state.animation;\n\n      if (null == animation) {\n        return;\n      }\n\n      animation.stop();\n      this.setState({\n        animation: null\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var animating = this.props.animating;\n      this.mounted = true;\n\n      if (animating) {\n        this.startAnimation();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var animating = this.props.animating;\n\n      if (animating ^ props.animating) {\n        if (animating) {\n          this.stopAnimation();\n        } else {\n          this.startAnimation();\n        }\n      }\n    }\n  }, {\n    key: \"renderComponent\",\n    value: function renderComponent(undefined, index) {\n      var progress = this.state.progress;\n      var _this$props2 = this.props,\n          renderComponent = _this$props2.renderComponent,\n          count = _this$props2.count;\n\n      if ('function' === typeof renderComponent) {\n        return renderComponent({\n          index: index,\n          count: count,\n          progress: progress\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          count = _this$props3.count,\n          props = _objectWithoutProperties(_this$props3, [\"count\"]);\n\n      return React.createElement(Animated.View, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }), Array.from(new Array(count), this.renderComponent));\n    }\n  }]);\n\n  return Indicator;\n}(PureComponent);\n\nIndicator.defaultProps = {\n  animationEasing: Easing.linear,\n  animationDuration: 1200,\n  animating: true,\n  interaction: true,\n  count: 1\n};\nIndicator.propTypes = {\n  animationEasing: PropTypes.func,\n  animationDuration: PropTypes.number,\n  animating: PropTypes.bool,\n  interaction: PropTypes.bool,\n  renderComponent: PropTypes.func,\n  count: PropTypes.number\n};\nexport { Indicator as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-indicators/src/components/indicator/index.js"],"names":["PropTypes","React","PureComponent","RN","version","split","map","item","Number","major","minor","hasLoopSupport","Indicator","props","renderComponent","bind","startAnimation","stopAnimation","state","progress","Animated","Value","mounted","finished","interaction","animationEasing","animationDuration","animation","timing","duration","easing","useNativeDriver","isInteraction","toValue","loop","start","setValue","setState","stop","animating","undefined","index","count","Array","from","defaultProps","Easing","linear","propTypes","func","number","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated, Easing } from 'react-native';\nimport RN from 'react-native/package';\n\nconst [major, minor] = RN.version.split('.').map((item) => Number(item));\nconst hasLoopSupport = !major && minor >= 45;\n\nexport default class Indicator extends PureComponent {\n  static defaultProps = {\n    animationEasing: Easing.linear,\n    animationDuration: 1200,\n\n    animating: true,\n    interaction: true,\n\n    count: 1,\n  };\n\n  static propTypes = {\n    animationEasing: PropTypes.func,\n    animationDuration: PropTypes.number,\n\n    animating: PropTypes.bool,\n    interaction: PropTypes.bool,\n\n    renderComponent: PropTypes.func,\n    count: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.renderComponent = this.renderComponent.bind(this);\n    this.startAnimation = this.startAnimation.bind(this);\n    this.stopAnimation = this.stopAnimation.bind(this);\n\n    this.state = {\n      progress: new Animated.Value(0),\n    };\n\n    this.mounted = false;\n  }\n\n  startAnimation({ finished } = {}) {\n    let { progress } = this.state;\n    let {\n      interaction,\n      animationEasing,\n      animationDuration,\n    } = this.props;\n\n    if (!this.mounted || false === finished) {\n      return;\n    }\n\n    let animation =\n      Animated.timing(progress, {\n        duration: animationDuration,\n        easing: animationEasing,\n        useNativeDriver: true,\n        isInteraction: interaction,\n        toValue: 1,\n      });\n\n    if (hasLoopSupport) {\n      Animated\n        .loop(animation)\n        .start();\n    } else {\n      progress.setValue(0);\n      animation.start(this.startAnimation);\n    }\n\n    this.setState({ animation });\n  }\n\n  stopAnimation() {\n    let { animation } = this.state;\n\n    if (null == animation) {\n      return;\n    }\n\n    animation.stop();\n\n    this.setState({ animation: null });\n  }\n\n  componentDidMount() {\n    let { animating } = this.props;\n\n    this.mounted = true;\n\n    if (animating) {\n      this.startAnimation();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentWillReceiveProps(props) {\n    let { animating } = this.props;\n\n    if (animating ^ props.animating) {\n      if (animating) {\n        this.stopAnimation();\n      } else {\n        this.startAnimation();\n      }\n    }\n  }\n\n  renderComponent(undefined, index) {\n    let { progress } = this.state;\n    let { renderComponent, count } = this.props;\n\n    if ('function' === typeof renderComponent) {\n      return renderComponent({ index, count, progress });\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    let { count, ...props } = this.props;\n\n    return (\n      <Animated.View {...props}>\n        {Array.from(new Array(count), this.renderComponent)}\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}