{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/MyOpenGames.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Box } from 'react-native-design-utility';\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport { Button, Icon } from 'native-base';\nimport firebase from 'firebase';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport WikiLoader from \"../common/WikiLoader\";\nimport { images } from \"../constant/images\";\nvar gamesToShow = [];\nvar STATE = {\n  OPEN: 1,\n  JOIN: 2,\n  DONE: 3,\n  NEXTCreator: 4,\n  NEXTJoiner: 5\n};\nvar categories = [{\n  name: 'NBA',\n  image: images.nbaLogo\n}, {\n  name: 'GENERAL KNOWLEDGE',\n  image: images.generalKnowledgeLogo\n}, {\n  name: 'MUSIC',\n  image: images.musicLogo\n}, {\n  name: 'POLITICS',\n  image: images.politicsLogo\n}, {\n  name: 'CELEBRITY',\n  image: images.celebrityLogo\n}, {\n  name: 'FILMS',\n  image: images.filmLogo\n}];\n\nvar GameBoard = function (_React$Component) {\n  _inherits(GameBoard, _React$Component);\n\n  var _super = _createSuper(GameBoard);\n\n  function GameBoard() {\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isReady: false,\n      isGames: false,\n      games: []\n    };\n\n    _this.getGames = function () {\n      gamesToShow = [];\n      categories.forEach(function (category) {\n        console.log(category);\n        var ref = firebase.database().ref(\"/theMole\" + category.name);\n        var openGames = ref.orderByChild(\"state\").equalTo(STATE.OPEN);\n        console.log(openGames);\n        openGames.on(\"child_added\", function (snapshot, key) {\n          var data = snapshot.val();\n\n          if (data.creator.uid == firebase.auth().currentUser.uid) {\n            game = {\n              key: snapshot.key,\n              data: data,\n              image: category.image,\n              categoryName: category.name\n            };\n            gamesToShow.push(game);\n\n            _this.setState({\n              isGames: true,\n              games: gamesToShow,\n              isReady: true\n            });\n          }\n        });\n      });\n    };\n\n    _this.cancelGame = function (key, categoryNameToJoin) {\n      var ref = firebase.database().ref(\"/theMole\" + categoryNameToJoin);\n      var user = firebase.auth().currentUser;\n      var gameRef = ref.child(key);\n      gameRef.remove().then(function () {\n        _this.getGames();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        games: [],\n        isReady: false,\n        isDeleted: false\n      }, function () {\n        _this2.getGames();\n      });\n      setInterval(function () {\n        if (!_this2.state.isReady) {\n          _this2.setState({\n            isReady: true\n          });\n        }\n      }, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }\n        }, React.createElement(WikiLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }\n        }));\n      } else if (this.state.games.length !== 0) {\n        return React.createElement(View, {\n          flex: 1,\n          style: {\n            margin: \"5%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, \"Opened Games\"), React.createElement(ScrollView, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }\n        }, this.state.games.map(function (l, i) {\n          return React.createElement(ListItem, {\n            onPress: function onPress() {\n              _this3.cancelGame(l.key, l.categoryName);\n            },\n            key: i,\n            leftAvatar: React.createElement(Avatar, {\n              source: l.image,\n              size: \"large\",\n              rounded: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 35\n              }\n            }),\n            title: l.data.creator.displayName,\n            titleStyle: {\n              color: '#3A5173',\n              fontWeight: 'bold'\n            },\n            subtitle: \"Category: \" + l.categoryName,\n            subtitleStyle: {\n              color: '#627365'\n            },\n            rightIcon: React.createElement(Icon, {\n              name: \"ios-close\",\n              style: {\n                fontSize: 25,\n                color: 'red'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 27\n              }\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }\n          });\n        }))));\n      }\n\n      return React.createElement(Box, {\n        f: 1,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, firebase.auth().currentUser.displayName, \", You don't have any opened games\\uD83E\\uDD14\"));\n    }\n  }]);\n\n  return GameBoard;\n}(React.Component);\n\nGameBoard.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerTitle: React.createElement(Image, {\n      style: {\n        width: 90,\n        height: 50,\n        flex: 1\n      },\n      resizeMode: \"contain\",\n      source: images.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }),\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }),\n    headerTitleStyle: {\n      color: '#4D5F66',\n      fontSize: 23\n    },\n    headerRight: React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }),\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('ChooseAGame');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#403773\",\n        fontSize: 32\n      },\n      name: \"ios-arrow-round-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }))\n  };\n};\n\nexport { GameBoard as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/MyOpenGames.js"],"names":["React","Box","NetworkHeader","Button","Icon","firebase","ListItem","Avatar","WikiLoader","images","gamesToShow","STATE","OPEN","JOIN","DONE","NEXTCreator","NEXTJoiner","categories","name","image","nbaLogo","generalKnowledgeLogo","musicLogo","politicsLogo","celebrityLogo","filmLogo","GameBoard","state","isReady","isGames","games","getGames","forEach","category","console","log","ref","database","openGames","orderByChild","equalTo","on","snapshot","key","data","val","creator","uid","auth","currentUser","game","categoryName","push","setState","cancelGame","categoryNameToJoin","user","gameRef","child","remove","then","catch","error","isDeleted","setInterval","length","margin","fontSize","fontWeight","textAlign","map","l","i","displayName","color","Component","navigationOptions","navigation","headerTitle","width","height","flex","logo","headerBackground","headerTitleStyle","headerRight","headerLeft","navigate","backgroundColor","elevation"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport {Image,Text,View,ScrollView} from \"react-native\";\nimport {Box} from 'react-native-design-utility'\nimport NetworkHeader from '../common/NetworkHeader';\nimport {Button,Icon} from 'native-base';\nimport firebase from 'firebase';\nimport { ListItem,Avatar } from 'react-native-elements'\nimport WikiLoader from '../common/WikiLoader';\n\nimport {images} from '../constant/images';\n\nlet gamesToShow = [];\nconst STATE = {\n    OPEN:1,\n    JOIN:2,\n    DONE:3,\n    NEXTCreator:4,\n    NEXTJoiner:5,\n  }\n\nconst categories = [\n    { name: 'NBA',image:images.nbaLogo}, \n    { name: 'GENERAL KNOWLEDGE',image:images.generalKnowledgeLogo},\n    { name: 'MUSIC',image:images.musicLogo},\n    { name: 'POLITICS',image:images.politicsLogo},\n    { name: 'CELEBRITY',image:images.celebrityLogo},\n    { name: 'FILMS',image:images.filmLogo},\n  ];\n\nexport default class GameBoard extends React.Component{\n    state ={\n        isReady:false,\n        isGames:false,\n        games:[]\n    }\n  static navigationOptions = ({ navigation }) =>{\n    return{\n      headerTitle: (\n        <Image style={{ width: 90, height: 50,flex:1 }} resizeMode=\"contain\" source={images.logo}/>\n      ),\n      headerBackground: (\n        <NetworkHeader/>\n      ),\n      headerTitleStyle: { color: '#4D5F66',fontSize:23 },\n      headerRight:<Text></Text>,\n      headerLeft: \n        ( <Button\n            onPress={()=>navigation.navigate('ChooseAGame')}\n            style={{backgroundColor:\"transparent\",elevation:0}}>\n            <Icon style={{color:\"#403773\",fontSize:32}}  name=\"ios-arrow-round-back\" />\n        </Button>\n        ),\n    }\n}\ngetGames = ()=>{\n  gamesToShow=[];\n        categories.forEach(category => {\n            console.log(category);\n            const ref =  firebase.database().ref(\"/theMole\"+category.name);\n            const openGames = ref.orderByChild(\"state\").equalTo(STATE.OPEN);\n            console.log(openGames);\n            openGames.on(\"child_added\",(snapshot,key)=>{\n            const data = snapshot.val();\n            //igonre other people games, show only ours. \n            if (data.creator.uid==firebase.auth().currentUser.uid) {\n                //push to an array\n                game = {\n                    key:snapshot.key,\n                    data,\n                    image:category.image,\n                    categoryName:category.name\n                }\n                gamesToShow.push(game);\n                this.setState({\n                    isGames:true,\n                    games:gamesToShow,\n                    isReady:true\n                })\n                }\n            })\n        });\n}\ncomponentDidMount(){\n        this.setState({\n            games:[],\n            isReady:false,\n            isDeleted:false\n        },()=>{\n          this.getGames();\n      })\n      setInterval(()=>{\n        if (!this.state.isReady) {\n          this.setState({\n            isReady:true\n          })\n        }\n      },3000)\n    }   \n    cancelGame = (key,categoryNameToJoin)=>{\n         //use firebase right here to join existing game in a category to choose from\n         const ref =  firebase.database().ref(\"/theMole\"+categoryNameToJoin);\n         const user = firebase.auth().currentUser;\n         const gameRef = ref.child(key);\n         \n         //remove a game from firebase \n         gameRef.remove()\n         .then(()=>{\n             //this.props.navigation.navigate('ChooseAGame')\n             this.getGames();\n\n         })\n         .catch((error)=>{\n             console.log(error)\n         })\n    }\n  render(){\n    if (!this.state.isReady) {\n        return(\n          <Box f={1} center bg=\"white\">\n            <WikiLoader/>\n          </Box>\n        )\n    }\n    else if(this.state.games.length!==0){\n        return(\n          <View flex={1} style={{margin:\"5%\"}}>\n          <Text style={{fontSize:20,fontWeight:'bold',textAlign:'center'}}>Opened Games</Text>\n          <ScrollView>\n              <View>\n                  {this.state.games.map((l, i) => (\n                  <ListItem\n                      onPress={()=>{this.cancelGame(l.key,l.categoryName)}}  \n                      key={i}\n                      leftAvatar={<Avatar\n                          source={l.image}\n                          size=\"large\"\n                          rounded\n                      />}\n                      title={l.data.creator.displayName}\n                      titleStyle={{color:'#3A5173',fontWeight:'bold'}}\n                      subtitle={\"Category: \" +l.categoryName}\n                      subtitleStyle={{color:'#627365'}}\n                      rightIcon={\n                          <Icon \n                          name='ios-close'\n                          style={{fontSize: 25, color: 'red'}}\n                          />\n                      }\n                  />\n                  ))\n                  }\n              </View>\n          </ScrollView>\n      </View>\n        )\n        }\n            return(\n      <Box f={1} center>\n        <Text style={{fontSize:20}}>{firebase.auth().currentUser.displayName}, You don't have any opened games🤔</Text>\n      </Box>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}