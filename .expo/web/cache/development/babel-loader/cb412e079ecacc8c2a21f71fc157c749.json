{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/article.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Button, Card, Title, Paragraph } from 'react-native-paper';\nimport { Icon } from \"native-base\";\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport { Box } from 'react-native-design-utility';\nimport WikiLoader from \"../common/WikiLoader\";\nvar wikipediaApi = 'https://en.wikipedia.org/w/api.php?format=json&action=query&generator=random&prop=extracts&exintro=&explaintext=&grnnamespace=0';\nvar body = {\n  method: 'GET',\n  dataType: 'json'\n};\nvar myRequest = new Request(wikipediaApi, body);\nvar fullWikiUri = \"\";\n\nvar RandArticle = function (_React$Component) {\n  _inherits(RandArticle, _React$Component);\n\n  var _super = _createSuper(RandArticle);\n\n  function RandArticle() {\n    var _this;\n\n    _classCallCheck(this, RandArticle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      imageUrl: 'https://i.pinimg.com/originals/59/9a/2b/599a2b3ebc21325ff8f26bd6bf94ed61.jpg',\n      randomArticle: \"\",\n      article: false,\n      randomArticleImage: \"\",\n      randomArticleURI: \"\",\n      isReady: false\n    };\n\n    _this.goBackToProfile = function () {\n      _this.props.navigation.navigate('Profile');\n    };\n\n    _this.goBackToWikipedia = function () {\n      Linking.openURL(fullWikiUri);\n    };\n\n    _this.getRandomAgain = function () {\n      _this.setState({\n        isReady: false\n      }, function () {\n        _this.componentDidMount();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RandArticle, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(myRequest).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        var pageid = Object.keys(data.query.pages)[0];\n        fullWikiUri = 'https://en.wikipedia.org/wiki/';\n        var wiki = data.query.pages[pageid].title;\n        fullWikiUri = fullWikiUri + wiki;\n\n        _this2.setState({\n          randomArticle: data.query.pages[pageid],\n          article: true\n        }, function () {\n          var API = 'https://en.wikipedia.org/w/api.php?action=query&titles=' + _this2.state.randomArticle.title + '&prop=pageimages&format=json&pithumbsize=400';\n          fetch(API).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            var pgid = Object.keys(data.query.pages)[0];\n\n            if (typeof data.query.pages[pgid].thumbnail !== \"undefined\") {\n              _this2.setState({\n                imageUrl: data.query.pages[pgid].thumbnail.source,\n                isReady: true\n              });\n            } else {\n              _this2.setState({\n                isReady: true,\n                imageUrl: 'https://i.pinimg.com/originals/59/9a/2b/599a2b3ebc21325ff8f26bd6bf94ed61.jpg'\n              });\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isReady) {\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }\n        }, React.createElement(WikiLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }\n      }, React.createElement(Card, {\n        elevation: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(Card.Cover, {\n        style: {\n          width: 400,\n          height: 300,\n          backgroundColor: 'transparent'\n        },\n        resizeMode: \"repeat\",\n        source: {\n          uri: this.state.imageUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, this.state.randomArticle.title), React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, this.state.randomArticle.extract)), React.createElement(Card.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        onPress: this.goBackToProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, \"Ok\"), React.createElement(Button, {\n        onPress: this.goBackToWikipedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"Get the full article!\"), React.createElement(Button, {\n        style: {\n          color: '#79BC6D'\n        },\n        onPress: this.getRandomAgain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, \"NEXT ONE!\"))));\n    }\n  }]);\n\n  return RandArticle;\n}(React.Component);\n\nRandArticle.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerTitle: \"Random Wiki!\",\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }),\n    headerTitleStyle: {\n      color: '#000',\n      fontSize: 23\n    },\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Profile');\n      },\n      style: {\n        backgroundColor: \"transparent\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#403773\",\n        fontSize: 35\n      },\n      name: \"ios-arrow-round-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }))\n  };\n};\n\nexport default RandArticle;","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/article.js"],"names":["React","Button","Card","Title","Paragraph","Icon","NetworkHeader","Box","WikiLoader","wikipediaApi","body","method","dataType","myRequest","Request","fullWikiUri","RandArticle","state","imageUrl","randomArticle","article","randomArticleImage","randomArticleURI","isReady","goBackToProfile","props","navigation","navigate","goBackToWikipedia","Linking","openURL","getRandomAgain","setState","componentDidMount","fetch","then","response","json","data","console","log","pageid","Object","keys","query","pages","wiki","title","API","pgid","thumbnail","source","width","height","backgroundColor","uri","extract","color","Component","navigationOptions","headerTitle","headerBackground","headerTitleStyle","fontSize","headerLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Linking,ScrollView,ActivityIndicator} from 'react-native';\nimport {  Button, Card, Title, Paragraph } from 'react-native-paper';\nimport { Icon } from \"native-base\";\nimport NetworkHeader from '../common/NetworkHeader';\n//import {images} from '../constant/images';\nimport {Box} from 'react-native-design-utility';\nimport WikiLoader from '../common/WikiLoader';\n\nconst wikipediaApi = 'https://en.wikipedia.org/w/api.php?format=json&action=query&generator=random&prop=extracts&exintro=&explaintext=&grnnamespace=0';\nconst body = { method: 'GET', dataType: 'json'};\nconst myRequest = new Request(wikipediaApi, body); \nlet fullWikiUri = \"\";\n\n\nclass RandArticle extends React.Component{\n  state = {\n    imageUrl:'https://i.pinimg.com/originals/59/9a/2b/599a2b3ebc21325ff8f26bd6bf94ed61.jpg',\n    randomArticle:\"\",\n    article:false,\n    randomArticleImage:\"\",\n    randomArticleURI:\"\",\n    isReady:false\n  }\n  componentDidMount(){\n    fetch(myRequest)\n          .then(response => response.json())\n          .then(data => {\n            console.log(data)\n            var pageid = Object.keys(data.query.pages)[0];\n            fullWikiUri = 'https://en.wikipedia.org/wiki/';\n            let wiki = data.query.pages[pageid].title;\n            fullWikiUri = fullWikiUri + wiki;\n            this.setState({ \n              randomArticle: data.query.pages[pageid],\n              article: true\n             },()=>{\n              let API = 'https://en.wikipedia.org/w/api.php?action=query&titles='+this.state.randomArticle.title+'&prop=pageimages&format=json&pithumbsize=400';\n              fetch(API)\n              .then(response => response.json())\n              .then(data => {\n                var pgid = Object.keys(data.query.pages)[0];\n                if (typeof data.query.pages[pgid].thumbnail !== \"undefined\") {\n                  this.setState({imageUrl:data.query.pages[pgid].thumbnail.source,isReady:true})\n                }\n                else {\n                  this.setState({\n                    isReady:true,\n                    imageUrl:'https://i.pinimg.com/originals/59/9a/2b/599a2b3ebc21325ff8f26bd6bf94ed61.jpg',\n                  })\n                }\n              })\n             })\n          })\n          \n  }\n  static navigationOptions =({ navigation })=> {\n    return{\n        headerTitle:\"Random Wiki!\",\n        headerBackground: (\n          <NetworkHeader/>\n        ),\n        headerTitleStyle: { color: '#000',fontSize:23 },\n        headerLeft: \n              ( <Button\n                  onPress={()=>navigation.navigate('Profile')}\n                  style={{backgroundColor:\"transparent\"}}>\n                  <Icon style={{color:\"#403773\",fontSize:35}}  name=\"ios-arrow-round-back\" />\n                </Button>\n              ),\n      }\n    }\n  goBackToProfile = ()=>{\n    this.props.navigation.navigate('Profile');\n  }\n  goBackToWikipedia = ()=>{\n    Linking.openURL(fullWikiUri);\n  }\n  getRandomAgain = ()=>{\n    this.setState({isReady:false},()=>{\n      this.componentDidMount();\n    })\n  }\n  render(){\n    if (!this.state.isReady) {\n      return(\n        <Box f={1} center bg=\"white\">\n          <WikiLoader/>\n        </Box>\n      )\n    }\n    return(\n    <ScrollView>\n      <Card elevation={16}>\n          <Card.Cover style={{width:400,height:300,backgroundColor:'transparent'}} resizeMode='repeat' source={{uri:this.state.imageUrl}}/>      \n          <Card.Content>\n          <Title>{this.state.randomArticle.title}</Title>\n          <Paragraph>{this.state.randomArticle.extract}</Paragraph>\n        </Card.Content>\n        <Card.Actions>\n          <Button onPress={this.goBackToProfile}>Ok</Button>\n          <Button onPress={this.goBackToWikipedia}>Get the full article!</Button>\n          <Button style={{color:'#79BC6D'}} onPress={this.getRandomAgain}>NEXT ONE!</Button>\n        </Card.Actions>\n      </Card>\n    </ScrollView>\n    )\n  }\n}\n\n\nexport default RandArticle;"]},"metadata":{},"sourceType":"module"}