{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-animated-emoji/lib/Emoji.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport nodeEmoji from 'node-emoji';\n\nvar Emoji = function (_React$Component) {\n  _inherits(Emoji, _React$Component);\n\n  var _super = _createSuper(Emoji);\n\n  function Emoji() {\n    _classCallCheck(this, Emoji);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Emoji, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, nodeEmoji.get(this.props.name));\n    }\n  }]);\n\n  return Emoji;\n}(React.Component);\n\nEmoji.propTypes = {\n  name: PropTypes.string.isRequired\n};\nexport { Emoji as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/node_modules/react-native-animated-emoji/lib/Emoji.js"],"names":["React","PropTypes","nodeEmoji","Emoji","get","props","name","Component","propTypes","string","isRequired"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEqBC,K;;;;;;;;;;;;;6BAMV;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,SAAS,CAACE,GAAV,CAAc,KAAKC,KAAL,CAAWC,IAAzB,CADH,CADF;AAKD;;;;EAZgCN,KAAK,CAACO,S;;AAApBJ,K,CAEZK,S,GAAY;AACjBF,EAAAA,IAAI,EAAEL,SAAS,CAACQ,MAAV,CAAiBC;AADN,C;SAFAP,K","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\nimport nodeEmoji from 'node-emoji';\n\nexport default class Emoji extends React.Component {\n\n  static propTypes = {\n    name: PropTypes.string.isRequired\n  };\n\n  render() {\n    return (\n      <Text>\n        {nodeEmoji.get(this.props.name)}\n      </Text>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}