{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/AvatarScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FooterNavigator from \"../common/Footer\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Container, Icon } from 'native-base';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport { images } from \"../constant/images\";\nimport Lightbox from 'react-native-lightbox/Lightbox/';\nimport { Button } from 'react-native-elements';\nimport BannerMole from \"../common/BannerMole\";\nimport firebase from 'firebase';\nvar activeProps = {\n  resizeMode: 'contain',\n  flex: 1,\n  width: null\n};\nvar styles = StyleSheet.create({\n  MainContainer: {\n    justifyContent: 'center',\n    flex: 7,\n    margin: 10,\n    paddingTop: Platform.OS === 'ios' ? 20 : 0,\n    borderStyle: 'solid',\n    height: 'auto'\n  },\n  GridViewBlockStyle: {\n    justifyContent: 'center',\n    flex: 1,\n    alignItems: 'center',\n    height: 165,\n    width: 135,\n    margin: 5,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderRadius: 15\n  },\n  GridViewInsideImageItemStyle: {\n    justifyContent: 'center',\n    width: 159,\n    height: 115,\n    borderRadius: 10\n  }\n});\n\nvar AvatarScreen = function (_Component) {\n  _inherits(AvatarScreen, _Component);\n\n  var _super = _createSuper(AvatarScreen);\n\n  function AvatarScreen() {\n    var _this;\n\n    _classCallCheck(this, AvatarScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      GridViewItems: [{\n        key: images.avatar1,\n        name: '1'\n      }, {\n        key: images.avatar2,\n        name: '2'\n      }, {\n        key: images.avatar3,\n        name: '3'\n      }, {\n        key: images.avatar4,\n        name: '4'\n      }, {\n        key: images.avatar5,\n        name: '5'\n      }, {\n        key: images.avatar6,\n        name: '6'\n      }, {\n        key: images.avatar7,\n        name: '7'\n      }, {\n        key: images.avatar8,\n        name: '8'\n      }, {\n        key: images.avatar9,\n        name: '9'\n      }, {\n        key: firebase.auth().currentUser.photoURL,\n        name: firebase.auth().currentUser.photoURL\n      }]\n    };\n\n    _this.BackToProfileScreen = function (screenName) {\n      if (screenName === 'Back') {\n        _this.props.navigation.navigate('Profile');\n      } else {\n        _this.props.navigation.navigate('Profile');\n      }\n    };\n\n    _this.changeToAvatar = function (avatar) {\n      var avatarUrl = 'http://proj.ruppin.ac.il/bgroup65/prod/img/' + avatar + '.png';\n\n      if (avatar.length > 1) {\n        avatarUrl = avatar;\n      }\n\n      var endpoint = 'https://proj.ruppin.ac.il/bgroup65/prod/api/PlayerAvatar?avatarUrl=' + avatarUrl + '&uid=' + firebase.auth().currentUser.uid;\n      console.log(endpoint);\n      fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function () {\n        Alert.alert('', 'Profile pic changedðŸ¤©', [{\n          text: \"OK\",\n          style: 'default'\n        }]);\n\n        _this.props.navigation.navigate('Profile');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AvatarScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, React.createElement(BannerMole, {\n        title: \"More avatars are coming soon:)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.MainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.GridViewItems,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            on: true,\n            style: styles.GridViewBlockStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }\n          }, React.createElement(Lightbox, {\n            activeProps: activeProps,\n            pinchToZoom: true,\n            swipeToDismiss: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 27\n            }\n          }, React.createElement(Image, {\n            style: styles.GridViewInsideImageItemStyle,\n            source: item.name.length > 1 ? {\n              uri: item.key\n            } : item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }\n          })), React.createElement(Button, {\n            onPress: function onPress() {\n              return _this2.changeToAvatar(item.name);\n            },\n            title: \"take me!\",\n            style: {\n              paddingBottom: 1,\n              paddingTop: 1\n            },\n            type: \"outline\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 27\n            }\n          }));\n        },\n        numColumns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return AvatarScreen;\n}(Component);\n\nAvatarScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTitle: \"Our Avatars!\",\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }),\n    headerTitleStyle: {\n      color: '#000',\n      fontSize: 20,\n      textAlign: 'center'\n    },\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Profile');\n      },\n      type: \"clear\",\n      icon: React.createElement(Icon, {\n        name: \"ios-arrow-round-back\",\n        style: {\n          color: \"#403773\",\n          fontSize: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    })\n  };\n};\n\nexport default AvatarScreen;","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/AvatarScreen.js"],"names":["React","Component","FooterNavigator","Container","Icon","NetworkHeader","images","Lightbox","Button","BannerMole","firebase","activeProps","resizeMode","flex","width","styles","StyleSheet","create","MainContainer","justifyContent","margin","paddingTop","Platform","OS","borderStyle","height","GridViewBlockStyle","alignItems","backgroundColor","borderWidth","borderRadius","GridViewInsideImageItemStyle","AvatarScreen","state","GridViewItems","key","avatar1","name","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","auth","currentUser","photoURL","BackToProfileScreen","screenName","props","navigation","navigate","changeToAvatar","avatar","avatarUrl","length","endpoint","uid","console","log","fetch","method","headers","Accept","then","Alert","alert","text","style","catch","error","item","uri","paddingBottom","navigationOptions","headerTitle","headerBackground","headerTitleStyle","color","fontSize","textAlign","headerLeft"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport FooterNavigator from '../common/Footer'\nimport {Text} from 'react-native';\nimport { Container,Icon } from 'native-base';\nimport {Alert,StyleSheet, FlatList, View, Platform,Image} from 'react-native';\nimport NetworkHeader from '../common/NetworkHeader';\nimport {images} from '../constant/images';\nimport Lightbox from 'react-native-lightbox/Lightbox/';\nimport {Button} from 'react-native-elements';\nimport BannerMole from '../common/BannerMole';\nimport firebase from 'firebase';\n\nconst activeProps = {\n  resizeMode: 'contain',\n  flex: 1,\n  width: null\n};\nconst styles = StyleSheet.create({\n    MainContainer :{\n      justifyContent: 'center',\n      flex:7,\n      margin: 10,\n      paddingTop: (Platform.OS) === 'ios' ? 20 : 0,\n      borderStyle:'solid',\n      height:'auto'\n    },\n    GridViewBlockStyle: {\n      justifyContent: 'center',\n      flex:1,\n      alignItems: 'center',\n      height: 165,\n      width:135,\n      margin: 5,\n      backgroundColor: 'transparent',\n      borderStyle:'solid',\n      borderWidth:1,\n      borderRadius:15\n    },\n    GridViewInsideImageItemStyle: {\n     justifyContent: 'center',\n     width:159,\n     height:115,\n     borderRadius:10,\n     //borderStyle:'solid',\n     //borderWidth:1\n    },\n  });\n\n\nclass AvatarScreen extends Component{\n  static navigationOptions = ({ navigation }) =>{\n    return{\n    headerTitle:\"Our Avatars!\",\n    headerBackground: (\n      <NetworkHeader/>\n    ),\n    headerTitleStyle: { color: '#000',fontSize:20,textAlign:'center' },\n    headerLeft: \n     ( <Button\n        onPress={()=>navigation.navigate('Profile')}\n        type='clear'\n        icon={\n          <Icon\n            name=\"ios-arrow-round-back\"\n            style={{color:\"#403773\",fontSize:35}}\n          />\n        }\n    />\n     ),\n    }\n  }\n    state = {\n        GridViewItems: [\n          {key: images.avatar1,name:'1'},\n          {key: images.avatar2,name:'2'},\n          {key: images.avatar3,name:'3'},\n          {key: images.avatar4,name:'4'},\n          {key: images.avatar5,name:'5'},\n          {key: images.avatar6,name:'6'},\n          {key: images.avatar7,name:'7'},\n          {key: images.avatar8,name:'8'},\n          {key: images.avatar9,name:'9'},\n          {key:firebase.auth().currentUser.photoURL,name:firebase.auth().currentUser.photoURL}\n        ],\n    }\n    BackToProfileScreen = (screenName) =>{\n        if (screenName==='Back') {\n          this.props.navigation.navigate('Profile');\n        }\n        else{  \n          this.props.navigation.navigate('Profile');\n        }\n      }\n\n    changeToAvatar = (avatar)=>{\n        let avatarUrl = 'http://proj.ruppin.ac.il/bgroup65/prod/img/'+avatar+'.png';\n        if (avatar.length>1) {\n          avatarUrl = avatar;\n        }      \n\n        let endpoint = 'https://proj.ruppin.ac.il/bgroup65/prod/api/PlayerAvatar?avatarUrl='+avatarUrl+'&uid='+firebase.auth().currentUser.uid;\n        console.log(endpoint);\n        fetch(endpoint, {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          })\n          .then(()=>{\n            Alert.alert(\n              '',\n              'Profile pic changedðŸ¤©',\n              [\n                {\n                  text: \"OK\", \n                  style:'default'\n                },\n              ],\n            );  \n            this.props.navigation.navigate('Profile');\n          })\n          .catch((error)=>{\n            console.log(error);\n          });\n    }\n    render(){\n        return(\n            <Container>\n              <BannerMole title='More avatars are coming soon:)' />\n                <View  style={styles.MainContainer}>\n                    <FlatList\n                    data={ this.state.GridViewItems }\n                    renderItem={({item}) =>\n                        <View on style={styles.GridViewBlockStyle}>\n                          <Lightbox activeProps={activeProps} pinchToZoom swipeToDismiss>\n                            <Image style={styles.GridViewInsideImageItemStyle} source={item.name.length>1?{uri:item.key}:item.key}/>\n                          </Lightbox>\n                          <Button \n                            onPress={()=>this.changeToAvatar(item.name)}\n                            title=\"take me!\"\n                            style={{paddingBottom:1,paddingTop:1}}\n                            type='outline'\n                          />\n                        </View>\n                    }\n                    numColumns={2}\n                    />\n                </View> \n            </Container>\n        )\n    }\n}\n\n\nexport default AvatarScreen;"]},"metadata":{},"sourceType":"module"}