{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/JoinAGame.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport { Box } from 'react-native-design-utility';\nimport NetworkHeader from \"../common/NetworkHeader\";\nimport { Button, Icon } from 'native-base';\nimport firebase from 'firebase';\nimport { images } from \"../constant/images\";\nimport WikiLoader from \"../common/WikiLoader\";\nimport { ListItem, Avatar } from 'react-native-elements';\nimport { Notifications } from 'expo';\nimport { storageSet } from \"../constant/Storage\";\nvar gamesToShow = [];\nvar STATE = {\n  OPEN: 1,\n  JOIN: 2,\n  START: 3,\n  NEXTCreator: 4,\n  NEXTJoiner: 5,\n  WINCreator: 6,\n  WINJoiner: 7\n};\nvar creatorUid = '';\n\nvar GameBoard = function (_React$Component) {\n  _inherits(GameBoard, _React$Component);\n\n  var _super = _createSuper(GameBoard);\n\n  function GameBoard() {\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      show: false,\n      games: [],\n      isGames: false,\n      isReady: true,\n      notification: {},\n      creatorToken: '',\n      categories: []\n    };\n\n    _this.componentDidMount = function _callee() {\n      var response, data, categories;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://proj.ruppin.ac.il/igroup8/prod/api/Category'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              data = _context.sent;\n              categories = [];\n              data.forEach(function (element, key) {\n                categories.push({\n                  name: element.Name,\n                  code: '#27ae60',\n                  image: images.logo,\n                  id: element.Id\n                });\n              });\n\n              _this.setState({\n                categories: [].concat(categories)\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.JoinAGame = function (key, categoryNameToJoin) {\n      var ref = firebase.database().ref(\"/theMole\" + categoryNameToJoin);\n      var user = firebase.auth().currentUser;\n      var gameRef = ref.child(key);\n      gameRef.transaction(function (game) {\n        creatorUid = game.creator.uid;\n\n        if (!game.joiner) {\n          game.state = STATE.JOIN;\n          game.joiner = {\n            uid: user.uid,\n            displayName: user.displayName,\n            picture: user.photoURL\n          };\n          gameRef.update({\n            'joiner': game.joiner\n          });\n          gameRef.update({\n            'state': game.state\n          });\n\n          _this.sendPushNotificationFromClient(categoryNameToJoin, creatorUid, key);\n\n          storageSet('key', key);\n          storageSet('category', categoryNameToJoin);\n\n          _this.props.navigation.navigate('GameBoard');\n        }\n      });\n    };\n\n    _this.sendPushNotificationFromServer = function (category, creator) {\n      fetch('https://proj.ruppin.ac.il/bgroup65/prod/api/PlayerGetToken/?uid=' + creator).then(function (token) {\n        _this.setState({\n          creatorToken: JSON.parse(token._bodyInit)\n        });\n\n        console.log(JSON.parse(token._bodyInit));\n        var pnd = {\n          to: JSON.parse(token._bodyInit),\n          title: 'New Game',\n          body: 'Come play with ' + firebase.auth().currentUser.displayName + ' in ' + category + ' category game',\n          data: ''\n        };\n        fetch('http://proj.ruppin.ac.il/bgroup65/prod/sendpushnotification', {\n          method: 'POST',\n          body: JSON.stringify(pnd),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          if (json != null) {\n            console.log(\"\\n                    returned from Ruppin server\\n\\n                    json= \" + JSON.stringify(json));\n          } else {\n            alert('err json');\n          }\n        });\n      });\n    };\n\n    _this.sendPushNotification = function _callee2() {\n      var message, response;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              message = {\n                to: _this.state.expoPushToken,\n                sound: 'default',\n                title: 'Original Title',\n                body: 'And here is the body!',\n                data: {\n                  data: 'goes here'\n                },\n                _displayInForeground: true\n              };\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://exp.host/--/api/v2/push/send', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Accept-encoding': 'gzip, deflate',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(message)\n              }));\n\n            case 3:\n              response = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendPushNotificationFromClient = function (category, creator, key) {\n      fetch('http://proj.ruppin.ac.il/bgroup65/prod/api/PlayerGetToken/?uid=' + creator).then(function _callee3(token) {\n        var t, per, response, data;\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(token.json());\n\n              case 2:\n                t = _context3.sent;\n\n                _this.setState({\n                  creatorToken: t\n                });\n\n                per = {\n                  to: t,\n                  title: 'New Game',\n                  body: 'Come play with ' + firebase.auth().currentUser.displayName + ' in ' + category + ' category game',\n                  data: {\n                    key: key,\n                    category: category,\n                    joiner: firebase.auth().currentUser.displayName,\n                    time: Date.now()\n                  },\n                  _displayInForeground: true\n                };\n                _context3.next = 7;\n                return _regeneratorRuntime.awrap(fetch('https://exp.host/--/api/v2/push/send', {\n                  method: 'POST',\n                  headers: {\n                    Accept: 'application/json',\n                    'Accept-encoding': 'gzip, deflate',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(per)\n                }));\n\n              case 7:\n                response = _context3.sent;\n                _context3.next = 10;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 10:\n                data = _context3.sent;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    _this.ShowGames = function (categoryNameToJoin) {\n      _this.setState({\n        games: [],\n        show: true,\n        isReady: false\n      }, function () {\n        gamesToShow = [];\n        var ref = firebase.database().ref(\"/theMole\" + categoryNameToJoin);\n        var openGames = ref.orderByChild(\"state\").equalTo(STATE.OPEN);\n        openGames.on(\"child_added\", function (snapshot, key) {\n          var data = snapshot.val();\n\n          if (data.creator.uid != firebase.auth().currentUser.uid) {\n            game = {\n              key: snapshot.key,\n              data: data,\n              category: categoryNameToJoin\n            };\n            gamesToShow.push(game);\n\n            _this.setState({\n              isGames: true,\n              games: gamesToShow,\n              isReady: true\n            });\n          }\n        });\n      });\n\n      setInterval(function () {\n        if (!_this.state.isReady) {\n          _this.setState({\n            isReady: true\n          });\n        }\n      }, 5000);\n    };\n\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }\n        }, React.createElement(WikiLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }\n        }));\n      } else {\n        if (!this.state.show) {\n          return React.createElement(View, {\n            flex: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }\n          }, React.createElement(FlatGrid, {\n            itemDimension: 130,\n            items: this.state.categories,\n            style: styles.gridView,\n            spacing: 20,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item,\n                  index = _ref.index;\n              return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n                onPress: function onPress() {\n                  return _this2.ShowGames(item.name);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }\n              }, React.createElement(ImageBackground, {\n                source: item.image,\n                style: {\n                  flex: 1\n                },\n                resizeMode: \"contain\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 27\n                }\n              }, React.createElement(View, {\n                style: [styles.itemContainer, {\n                  borderStyle: 'solid',\n                  bordeeWidth: 2\n                }],\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 29\n                }\n              }))), React.createElement(Text, {\n                style: {\n                  textAlign: 'center',\n                  fontSize: '18px'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 25\n                }\n              }, item.name));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }\n          }));\n        } else if (this.state.games.length !== 0) {\n          return React.createElement(View, {\n            flex: 1,\n            style: {\n              margin: \"5%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 25,\n              fontWeight: 'bold',\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 11\n            }\n          }, \"Join a game\"), React.createElement(ScrollView, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 11\n            }\n          }, React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }\n          }, this.state.games.map(function (l, i) {\n            return React.createElement(ListItem, {\n              onPress: function onPress() {\n                return _this2.JoinAGame(l.key, l.category);\n              },\n              key: i,\n              leftAvatar: React.createElement(Avatar, {\n                rounded: true,\n                source: {\n                  uri: l.data.creator.picture\n                },\n                size: \"large\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 35\n                }\n              }),\n              title: l.data.creator.displayName,\n              titleStyle: {\n                color: '#3A5173',\n                fontWeight: 'bold'\n              },\n              subtitle: \"Category: \" + l.category,\n              subtitleStyle: {\n                color: '#627365'\n              },\n              rightIcon: React.createElement(Icon, {\n                name: \"ios-arrow-round-forward\",\n                style: {\n                  fontSize: 25,\n                  color: '#000'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 27\n                }\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }\n            });\n          }))));\n        }\n\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }\n        }, \"\\n          No open games:(\\n          Would u like to Open a game?\"), React.createElement(View, {\n          style: {\n            marginTop: 10,\n            flexDirection: 'row',\n            alignContent: 'space-between'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            marginRight: '5%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }\n        }, React.createElement(Button, {\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Profile');\n          },\n          style: {\n            padding: 10\n          },\n          bordered: true,\n          warning: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 19\n          }\n        }, \"Nope\"))), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }\n        }, React.createElement(Button, {\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Categories');\n          },\n          style: {\n            padding: 10\n          },\n          bordered: true,\n          success: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }\n        }, \"Create a game\")))));\n      }\n    }\n  }]);\n\n  return GameBoard;\n}(React.Component);\n\nGameBoard.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTitle: React.createElement(Image, {\n      style: {\n        width: 90,\n        height: 50,\n        flex: 1\n      },\n      resizeMode: \"contain\",\n      source: images.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }),\n    headerBackground: React.createElement(NetworkHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }),\n    headerRight: React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }\n    }),\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('ChooseAGame');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#403773\",\n        fontSize: 32\n      },\n      name: \"ios-arrow-round-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }))\n  };\n};\n\nexport { GameBoard as default };\nvar styles = StyleSheet.create({\n  gridView: {\n    marginTop: 20,\n    flex: 1\n  },\n  itemContainer: {\n    borderWidth: 1,\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 150\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/JoinAGame.js"],"names":["React","Component","FlatGrid","Box","NetworkHeader","Button","Icon","firebase","images","WikiLoader","ListItem","Avatar","Notifications","storageSet","gamesToShow","STATE","OPEN","JOIN","START","NEXTCreator","NEXTJoiner","WINCreator","WINJoiner","creatorUid","GameBoard","state","show","games","isGames","isReady","notification","creatorToken","categories","componentDidMount","fetch","response","json","data","forEach","element","key","push","name","Name","code","image","logo","id","Id","setState","JoinAGame","categoryNameToJoin","ref","database","user","auth","currentUser","gameRef","child","transaction","game","creator","uid","joiner","displayName","picture","photoURL","update","sendPushNotificationFromClient","props","navigation","navigate","sendPushNotificationFromServer","category","then","token","JSON","parse","_bodyInit","console","log","pnd","to","title","body","method","stringify","headers","alert","sendPushNotification","message","expoPushToken","sound","_displayInForeground","Accept","t","per","time","Date","now","ShowGames","openGames","orderByChild","equalTo","on","snapshot","val","setInterval","styles","gridView","item","index","flex","itemContainer","borderStyle","bordeeWidth","textAlign","fontSize","length","margin","fontWeight","map","l","i","uri","color","marginTop","flexDirection","alignContent","marginRight","padding","navigationOptions","headerTitle","width","height","headerBackground","headerRight","headerLeft","backgroundColor","elevation","StyleSheet","create","borderWidth","justifyContent","borderRadius","itemName","itemCode"],"mappings":"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","sourcesContent":["\nimport React,{ Component } from \"react\";\nimport {Image,Text,StyleSheet,View,TouchableOpacity,ImageBackground,ScrollView} from \"react-native\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport {Box} from 'react-native-design-utility'\nimport NetworkHeader from '../common/NetworkHeader';\nimport {Button,Icon} from 'native-base';\nimport firebase from 'firebase';\nimport {images} from '../constant/images';\nimport WikiLoader from '../common/WikiLoader';\nimport { ListItem,Avatar } from 'react-native-elements'\nimport { Notifications } from 'expo';\n\nimport { storageSet } from \"../constant/Storage\";\n\nlet gamesToShow=[];\n\n//game states\nconst STATE = {\n  OPEN:1,\n  JOIN:2,\n  START:3,\n  NEXTCreator:4,\n  NEXTJoiner:5,\n  WINCreator:6,\n  WINJoiner:7\n}\n\nlet creatorUid= '';\n\nexport default class GameBoard extends React.Component{\n    state = {\n        show:false,\n        games:[],\n        isGames:false,\n        isReady:true,\n        notification:{},\n        creatorToken:'',\n        categories:[]\n    }\n    static navigationOptions = ({ navigation }) =>{\n        return{\n          headerTitle: (\n            <Image style={{ width: 90, height: 50,flex:1 }} resizeMode=\"contain\" source={images.logo}/>\n            ),\n          headerBackground: (\n            <NetworkHeader/>\n          ),\n          //headerTitleStyle: { color: '#4D5F66',fontSize:23 },\n          headerRight:<Text></Text>,\n          headerLeft: \n            ( <Button\n                onPress={()=>navigation.navigate('ChooseAGame')}\n                style={{backgroundColor:\"transparent\",elevation:0}}>\n                <Icon style={{color:\"#403773\",fontSize:32}}  name=\"ios-arrow-round-back\" />\n            </Button>\n            ),\n        }\n    }\n    componentDidMount= async ()=>{\n      const response = await fetch('https://proj.ruppin.ac.il/igroup8/prod/api/Category');\n      const data = await response.json();\n      const categories = [];\n      data.forEach((element,key) => {\n        categories.push(\n          {\n            name: element.Name, code: '#27ae60' ,image:images.logo,id:element.Id\n          }\n        )\n      });\n      this.setState({categories:[...categories]});\n    }\n    //join a game function \n    JoinAGame = (key,categoryNameToJoin)=>{\n        //use firebase right here to join existing game in a category to choose from\n        const ref =  firebase.database().ref(\"/theMole\"+categoryNameToJoin);\n        const user = firebase.auth().currentUser;\n        const gameRef = ref.child(key);\n        \n        //atomic function to prevent two users sign to the same game.\n        gameRef.transaction((game)=>{\n            //console.log(game)\n            creatorUid = game.creator.uid;\n            if (!game.joiner) {\n                game.state = STATE.JOIN;\n                game.joiner = {\n                    uid:user.uid,\n                    displayName:user.displayName,\n                    picture:user.photoURL\n                }\n                //update values on \n                gameRef.update(({'joiner': game.joiner}));\n                gameRef.update(({'state': game.state}));\n                \n                //send push notification for the creator in case the app is on background\n                this.sendPushNotificationFromClient(categoryNameToJoin,creatorUid,key);\n                \n                //store values of specific game in AysncStorage\n                \n                storageSet('key', key);\n                storageSet('category', categoryNameToJoin);\n                \n                this.props.navigation.navigate('GameBoard');\n\n            }\n        })\n    }\n    \n    //SEND PUSH TO CREATOR TO COME AND PLAY from Client\n    //currently not working\n    sendPushNotificationFromServer = (category,creator)=>{\n      fetch('https://proj.ruppin.ac.il/bgroup65/prod/api/PlayerGetToken/?uid='+creator)\n      .then((token)=>{\n        this.setState({creatorToken:JSON.parse(token._bodyInit)});\n        console.log(JSON.parse(token._bodyInit));\n          let pnd = {\n            to: JSON.parse(token._bodyInit),\n            title: 'New Game',\n            body: 'Come play with ' + firebase.auth().currentUser.displayName + ' in ' + category + ' category game',\n            data:''\n           };\n          \n       \n         // POST TO RUPPIN SERVER\n         fetch('http://proj.ruppin.ac.il/bgroup65/prod/sendpushnotification', {\n            method: 'POST',\n            body: JSON.stringify(pnd),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n          })\n            .then(response => response.json())\n            .then(json => {\n                if (json != null) {\n                    console.log(`\n                    returned from Ruppin server\\n\n                    json= ${JSON.stringify( json)}`);\n\n                } else {\n                    alert('err json');\n                }\n            });//END FETCH TO RUPPIN\n\n        })//END STATE CHANGE\n    }\n    //SEND PUSH TO CREATOR TO COME AND PLAY from Client\n    sendPushNotification = async () => {\n      const message = {\n        to: this.state.expoPushToken,\n        sound: 'default',\n        title: 'Original Title',\n        body: 'And here is the body!',\n        data: { data: 'goes here' },\n        _displayInForeground: true,\n      };\n      const response = await fetch('https://exp.host/--/api/v2/push/send', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Accept-encoding': 'gzip, deflate',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(message),\n      });\n    };\n    sendPushNotificationFromClient = (category,creator,key)=>{\n      fetch('http://proj.ruppin.ac.il/bgroup65/prod/api/PlayerGetToken/?uid='+creator)\n      .then(async (token)=>{\n        const t = await token.json();\n        this.setState({creatorToken:t})\n          let per = {\n            to: t,\n            title: 'New Game',\n            body: 'Come play with ' + firebase.auth().currentUser.displayName + ' in ' + category + ' category game',\n            data:{key:key,category:category,joiner:firebase.auth().currentUser.displayName,time:Date.now()},\n            _displayInForeground: true,\n\n           };\n          \n          const response = await fetch('https://exp.host/--/api/v2/push/send', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Accept-encoding': 'gzip, deflate',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(per),\n          });\n          const data = await response.json();\n        })\n    }\n    //show all games if exists for chosen category \n    ShowGames=(categoryNameToJoin)=>{\n        this.setState({\n            games:[],\n            show:true,\n            isReady:false\n        },()=>{\n        gamesToShow=[];\n        const ref =  firebase.database().ref(\"/theMole\"+categoryNameToJoin);\n        const openGames = ref.orderByChild(\"state\").equalTo(STATE.OPEN);\n        openGames.on(\"child_added\",(snapshot,key)=>{\n          const data = snapshot.val();\n          //igonre our on games \n          if (data.creator.uid!=firebase.auth().currentUser.uid) {\n          //push to an array\n          game = {\n              key:snapshot.key,\n              data,\n              category:categoryNameToJoin\n          }\n          gamesToShow.push(game);\n          this.setState({\n            isGames:true,\n            games:gamesToShow,\n            isReady:true\n          })\n          }\n        })\n      })\n      setInterval(()=>{\n        if (!this.state.isReady) {\n          this.setState({\n            isReady:true\n          })\n        }\n      },5000)\n    }\n\n    render() {\n        if (!this.state.isReady) {\n          return(\n            <Box f={1} center bg=\"white\">\n              <WikiLoader/>\n            </Box>\n          )\n        }\n        else{\n        if (!this.state.show) {\n            return (\n                <View flex={1}>\n                  <FlatGrid\n                    itemDimension={130}\n                    items={this.state.categories}\n                    style={styles.gridView}\n                    spacing={20}\n                    renderItem={({ item, index }) => (\n                      <> \n                        <TouchableOpacity onPress={()=>this.ShowGames(item.name)}>\n                          <ImageBackground source={item.image} style={{ flex: 1 }} resizeMode='contain'>\n                            <View style={[styles.itemContainer,{borderStyle:'solid',bordeeWidth:2}]}>\n                            </View>\n                          </ImageBackground>\n                        </TouchableOpacity>\n                        <Text style={{textAlign:'center',fontSize:'18px'}}>{item.name}</Text>\n                      </> \n                    )}\n                  />\n                  </View>\n                );\n        }\n        else if(this.state.games.length!==0){\n        return(\n          <View flex={1} style={{margin:\"5%\"}}>\n          <Text style={{fontSize:25,fontWeight:'bold',textAlign:'center'}}>Join a game</Text>\n          <ScrollView>\n              <View>\n\n                  {this.state.games.map((l, i) => (\n                  <ListItem\n                      onPress={()=>this.JoinAGame(l.key,l.category)}\n                      key={i}\n                      leftAvatar={<Avatar rounded\n                          source={ {uri: l.data.creator.picture} }\n                          size=\"large\"\n                      />}\n                      title={l.data.creator.displayName}\n                      titleStyle={{color:'#3A5173',fontWeight:'bold'}}\n                      subtitle={\"Category: \" +l.category}\n                      subtitleStyle={{color:'#627365'}}\n                      rightIcon={\n                          <Icon \n                          name='ios-arrow-round-forward'\n                          style={{fontSize: 25, color: '#000'}}\n                          />\n                      }\n                  />\n                  ))\n                  }\n              </View>\n          </ScrollView>\n      </View>\n        )\n      }   \n      return(\n        <Box f={1} center bg=\"white\">\n          <Text style={{fontSize:20}}>\n          {`\n          No open games:(\n          Would u like to Open a game?`}\n          </Text>\n          <View style={{marginTop:10,flexDirection:'row',alignContent:'space-between'}}>\n              \n              <View style={{marginRight:'5%'}}>\n                <Button onPress={()=>this.props.navigation.navigate('Profile')} style={{padding:10}} bordered warning>\n                  <Text>Nope</Text>\n                </Button>\n              </View>\n              <View >\n                <Button onPress={()=>this.props.navigation.navigate('Categories')} style={{padding:10}} bordered success >\n                  <Text>Create a game</Text>\n                </Button >\n              </View>\n            </View>\n        </Box>\n      )\n    }\n  }\n}\n\n\n\n//STYLES\nconst styles = StyleSheet.create({\n    gridView: {\n      marginTop: 20,\n      flex: 1,\n    },\n    itemContainer: {\n      //borderStyle:'dots',\n      borderWidth:1,\n      justifyContent: 'flex-end',\n      borderRadius: 5,\n      padding: 10,\n      height: 150,\n    },\n    itemName: {\n      fontSize: 16,\n      color: '#fff',\n      fontWeight: '600',\n    },\n    itemCode: {\n      fontWeight: '600',\n      fontSize: 12,\n      color: '#fff',\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}