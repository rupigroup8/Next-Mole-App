{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/loserScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport { AnimatedEmoji } from 'react-native-animated-emoji';\n\nvar LoserScreen = function (_React$Component) {\n  _inherits(LoserScreen, _React$Component);\n\n  var _super = _createSuper(LoserScreen);\n\n  function LoserScreen() {\n    var _this;\n\n    _classCallCheck(this, LoserScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userUID: firebase.auth().currentUser.uid\n    };\n\n    _this.onAnimationCompleted = function () {\n      Alert.alert('Maybe next time...', 'You Lost -25 CashMole ðŸ˜²');\n\n      _this.props.navigation.navigate('Profile');\n    };\n\n    _this.getCashMoleFromLoser = function () {\n      var cash = -25;\n      var win = 0;\n      var endpoint = 'https://proj.ruppin.ac.il/bgroup65/prod/api/playerWinOrLose?win=' + win + '&cashMole=' + cash + '&uid=' + firebase.auth().currentUser.uid;\n      fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {}).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoserScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCashMoleFromLoser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AnimatedEmoji, {\n        index: 5,\n        style: {\n          bottom: 300\n        },\n        name: 'disappointed_relieved',\n        size: 30,\n        duration: 5000,\n        onAnimationCompleted: this.onAnimationCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      });\n    }\n  }]);\n\n  return LoserScreen;\n}(React.Component);\n\nexport { LoserScreen as default };","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/loserScreen.js"],"names":["React","firebase","AnimatedEmoji","LoserScreen","state","userUID","auth","currentUser","uid","onAnimationCompleted","Alert","alert","props","navigation","navigate","getCashMoleFromLoser","cash","win","endpoint","fetch","method","headers","Accept","then","response","json","data","catch","error","console","log","bottom","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;IAEqBC,W;;;;;;;;;;;;;;;UACjBC,K,GAAM;AACFC,MAAAA,OAAO,EAACJ,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BC;AADlC,K;;UAMNC,oB,GAAuB,YAAI;AACvBC,MAAAA,KAAK,CAACC,KAAN,CAAY,oBAAZ,EAAiC,0BAAjC;;AACA,YAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACH,K;;UACDC,oB,GAAqB,YAAI;AAErB,UAAMC,IAAI,GAAG,CAAC,EAAd;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAMC,QAAQ,GAAG,qEAAmED,GAAnE,GAAuE,YAAvE,GAAoFD,IAApF,GAAyF,OAAzF,GAAiGf,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BC,GAA9I;AACEW,MAAAA,KAAK,CAACD,QAAD,EAAU;AACTE,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX;AAFA,OAAV,CAAL,CAOGC,IAPH,CAOQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPhB,EAQGF,IARH,CAQQ,UAACG,IAAD,EAAQ,CACb,CATH,EAUGC,KAVH,CAUS,UAACC,KAAD,EAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAZH;AAaL,K;;;;;;;wCAzBkB;AACf,WAAKb,oBAAL;AACH;;;6BAwBO;AACJ,aAEQ,oBAAC,aAAD;AAEI,QAAA,KAAK,EAAE,CAFX;AAGI,QAAA,KAAK,EAAE;AAAEgB,UAAAA,MAAM,EAAE;AAAV,SAHX;AAII,QAAA,IAAI,EAAE,uBAJV;AAKI,QAAA,IAAI,EAAE,EALV;AAMI,QAAA,QAAQ,EAAE,IANd;AAOI,QAAA,oBAAoB,EAAE,KAAKtB,oBAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR;AAYH;;;;EA3CoCT,KAAK,CAACgC,S;;SAA1B7B,W","sourcesContent":["import React from \"react\";\nimport { Alert } from \"react-native\";\nimport firebase from 'firebase';\nimport { AnimatedEmoji } from 'react-native-animated-emoji';\n\nexport default class LoserScreen extends React.Component{\n    state={\n        userUID:firebase.auth().currentUser.uid,\n    }\n    componentDidMount(){\n        this.getCashMoleFromLoser();\n    }\n    onAnimationCompleted = ()=>{\n        Alert.alert('Maybe next time...','You Lost -25 CashMole ðŸ˜²');\n        this.props.navigation.navigate('Profile');\n    }\n    getCashMoleFromLoser=()=>{\n        //decrease cashMole by -25 and set +0 wins\n        const cash = -25;\n        const win = 0;\n        const endpoint = 'https://proj.ruppin.ac.il/bgroup65/prod/api/playerWinOrLose?win='+win+'&cashMole='+cash+'&uid='+firebase.auth().currentUser.uid;\n          fetch(endpoint,{\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n            })\n            .then(response => response.json())\n            .then((data)=>{\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n    }\n    render(){\n        return(\n\n                <AnimatedEmoji\n                    \n                    index={5} // index to identity emoji component\n                    style={{ bottom: 300 }} // start bottom position\n                    name={'disappointed_relieved'} // emoji name\n                    size={30} // font size\n                    duration={5000} // ms\n                    onAnimationCompleted={this.onAnimationCompleted} // completion handler\n                />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}