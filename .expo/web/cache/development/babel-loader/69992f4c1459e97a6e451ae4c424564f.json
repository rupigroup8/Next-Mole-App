{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/common/countdown.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CountDown from 'react-native-countdown-component';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport var Countdown2 = function (_React$Component) {\n  _inherits(Countdown2, _React$Component);\n\n  var _super = _createSuper(Countdown2);\n\n  function Countdown2() {\n    var _this;\n\n    _classCallCheck(this, Countdown2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      until: 30\n    };\n    return _this;\n  }\n\n  _createClass(Countdown2, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(CountDown, {\n        until: 30,\n        size: 30,\n        onFinish: function onFinish() {\n          return _this2.props.Expired();\n        },\n        digitStyle: {\n          backgroundColor: '#FFF'\n        },\n        digitTxtStyle: {\n          color: '#1CC625'\n        },\n        timeToShow: ['S'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Countdown2;\n}(React.Component);","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/common/countdown.js"],"names":["React","CountDown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","Countdown2","state","until","props","Expired","color","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AAuCE,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP;AADoB,CAAlB,CAAf;AAYF,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACU;AACJC,MAAAA,KAAK,EAAC;AADF,KADV;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAUY;AAAA;;AACN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE,EADT;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACQ,KAAL,CAAWC,OAAX,EAAN;AAAA,SAHZ;AAIE,QAAA,UAAU,EAAE;AAACP,UAAAA,eAAe,EAAE;AAAlB,SAJd;AAKE,QAAA,aAAa,EAAE;AAACQ,UAAAA,KAAK,EAAE;AAAR,SALjB;AAME,QAAA,UAAU,EAAE,CAAC,GAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD;AAvBL;;AAAA;AAAA,EAAgCf,KAAK,CAACgB,SAAtC","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport CountDown from 'react-native-countdown-component';\n\n\n// class CountdownTimer extends React.Component{\n//     Expire = ()=>{\n//       this.props.Expired();\n//     }\n//     shouldComponentUpdate(){\n//       if (!this.props.startAgain) {\n//         return false;\n//       }\n//       return true;\n//     }\n//     render(){\n//     return(<View style={styles.container}>\n//       <TimerCountdown\n//         initialMilliseconds={1000 * 30}\n//         // onTick={}\n//         onExpire={() => this.Expire()}\n        \n//         formatMilliseconds={(milliseconds) => {\n//           const remainingSec = Math.round(milliseconds / 1000);\n//           const seconds = parseInt((remainingSec % 60).toString(), 10);\n//           const minutes = parseInt(((remainingSec / 60) % 60).toString(), 10);\n//           const hours = parseInt((remainingSec / 3600).toString(), 10);\n//           const s = seconds < 10 ? '0' + seconds : seconds;\n//           const m = minutes < 10 ? '0' + minutes : minutes;\n//           let h = hours < 10 ? '0' + hours : hours;\n//           h = h === '00' ? '' : h + ':';\n//           return s;\n//           // h + m + ':' +\n//         }}\n//         allowFontScaling={true}\n//         style={{ fontSize: 22 }}\n//       />\n//     </View>)\n//     }\n//   }\n   \n  const styles = StyleSheet.create({\n    container: {\n     // borderWidth:1,\n      flex: 1,\n      backgroundColor: \"#fff\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  });\n   \n// export default CountdownTimer;\n\nexport class Countdown2 extends React.Component{\n    state={\n      until:30\n    }\n    // shouldComponentUpdate(){\n    //   if (!this.props.startAgain) {\n    //     return false;\n    //   }\n    //   return true;\n    // }\n    render(){\n      return (\n        <View style={styles.container}>\n          <CountDown\n            until={30}\n            size={30}\n            onFinish={() => this.props.Expired()}\n            digitStyle={{backgroundColor: '#FFF'}}\n            digitTxtStyle={{color: '#1CC625'}}\n            timeToShow={['S']}\n          />\n        </View>\n    );\n    }\n}\n "]},"metadata":{},"sourceType":"module"}