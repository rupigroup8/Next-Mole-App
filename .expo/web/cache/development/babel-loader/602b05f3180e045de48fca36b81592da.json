{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/ProfileScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box } from 'react-native-design-utility';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, Icon, Content } from 'native-base';\nimport { Avatar, Text } from 'react-native-elements';\nimport FABStartGame from \"../common/StartAGame\";\nimport FABSettings from \"../common/Settings\";\nimport FABPaths from \"../common/BombShop\";\nimport firebase from 'firebase';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport { images } from \"../constant/images\";\n\nvar ProfileScreen = function (_Component) {\n  _inherits(ProfileScreen, _Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen() {\n    var _this;\n\n    _classCallCheck(this, ProfileScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showAlert: false,\n      userName: \"\",\n      userPic: \"\",\n      email: \"\",\n      isReady: false,\n      playerCash: '?',\n      playerWins: '?'\n    };\n\n    _this.NavigateToHelp = function () {\n      _this.props.navigation.navigate('Intro');\n    };\n\n    _this.registerForPushNotificationsAsync = function _callee() {\n      var _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status, token;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n            case 2:\n              _await$Permissions$ge = _context.sent;\n              existingStatus = _await$Permissions$ge.status;\n              finalStatus = existingStatus;\n              console.log(finalStatus);\n\n              if (!(existingStatus !== 'granted')) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n            case 9:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              finalStatus = status;\n              console.log(status);\n\n            case 13:\n              console.log(finalStatus);\n\n              if (!(finalStatus !== 'granted')) {\n                _context.next = 16;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 16:\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 18:\n              token = _context.sent;\n              return _context.abrupt(\"return\", fetch('https://proj.ruppin.ac.il/bgroup65/prod/api/PlayerToken', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  Token: token,\n                  Uid: firebase.auth().currentUser.uid\n                })\n              }).catch(function (error) {\n                alert(error);\n              }));\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.EditAvatarPic = function () {\n      _this.props.navigation.navigate('Avatar');\n    };\n\n    _this.changeScreen = function (screenName) {\n      _this.props.navigation.navigate(screenName);\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.registerForPushNotificationsAsync();\n      this.setState({\n        userName: firebase.auth().currentUser.displayName,\n        userPic: firebase.auth().currentUser.photoURL,\n        email: firebase.auth().currentUser.email,\n        isReady: true\n      }, function () {\n        var endpoint = 'http://proj.ruppin.ac.il/bgroup65/prod/api/playergetplayer?uid=' + firebase.auth().currentUser.uid;\n        fetch(endpoint).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this2.setState({\n            playerCash: data.CashMole,\n            playerWins: data.NumOfWinnings,\n            userPic: data.ProfilePic\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isReady) {\n        return React.createElement(Box, {\n          f: 1,\n          center: true,\n          bg: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }\n        }, React.createElement(ActivityIndicator, {\n          color: \"purple\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return React.createElement(Box, {\n        f: 1,\n        bg: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        resizeMode: \"contain\",\n        style: {\n          flex: 1\n        },\n        source: {\n          uri: 'https://securestrux.com/content/uploads/2014/02/network_blue_opacity_lighter.png'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, React.createElement(Box, {\n        f: 1,\n        style: {\n          marginTop: \"15%\"\n        },\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, React.createElement(Avatar, {\n        size: \"xlarge\",\n        rounded: true,\n        source: {\n          uri: this.state.userPic ? this.state.userPic : 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg'\n        },\n        showEditButton: true,\n        onEditPress: this.EditAvatarPic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        h5: true,\n        style: {\n          fontWeight: \"bold\",\n          marginTop: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, this.state.userName))), React.createElement(Content, {\n        contentContainerStyle: {\n          flex: 1,\n          marginTop: '4%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      }, React.createElement(Grid, {\n        style: {\n          justifyContent: 'space-evenly'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }), React.createElement(Col, {\n        style: styles.colStyleForGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 27\n        }\n      }, React.createElement(ImageBackground, {\n        resizeMode: \"contain\",\n        style: {\n          flex: 1\n        },\n        source: images.dollar_coins,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyleForGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }, this.state.playerCash))))), React.createElement(Col, {\n        style: styles.colStyleForGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }\n      }, React.createElement(ImageBackground, {\n        resizeMode: \"contain\",\n        style: {\n          flex: 1\n        },\n        source: images.prize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 31\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyleForGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 31\n        }\n      }, this.state.playerWins))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }\n      }))), React.createElement(Box, {\n        bg: \"transparent\",\n        f: 1,\n        style: {\n          marginBottom: \"3%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, React.createElement(Box, {\n        f: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, React.createElement(FABStartGame, {\n        GoToScreen: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      })), React.createElement(Box, {\n        style: {\n          marginLeft: \"37%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, React.createElement(FABPaths, {\n        GoToScreen: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      })), React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, React.createElement(FABSettings, {\n        GoToScreen: this.changeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }))));\n    }\n  }]);\n\n  return ProfileScreen;\n}(Component);\n\nProfileScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    headerTitle: React.createElement(Image, {\n      style: {\n        width: 90,\n        height: 40,\n        flex: 1\n      },\n      resizeMode: \"contain\",\n      source: images.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }),\n    headerBackgroundStyle: {\n      backgroundColor: '#000'\n    },\n    headerRight: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Article');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#2DA3BD\",\n        fontSize: 35\n      },\n      name: \"md-paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })),\n    headerLeft: React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Paths');\n      },\n      style: {\n        backgroundColor: \"transparent\",\n        elevation: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }\n    }, React.createElement(Icon, {\n      style: {\n        color: \"#2DA3BD\",\n        fontSize: 35\n      },\n      name: \"ios-infinite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }))\n  };\n};\n\nexport default ProfileScreen;\nvar styles = StyleSheet.create({\n  baseColumns: {\n    padding: 10\n  },\n  dataViewCash: {\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderColor: 'grey',\n    padding: 5,\n    borderRadius: 10,\n    backgroundColor: '#4F86EC'\n  },\n  dataViewBombs: {\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderColor: 'grey',\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: '#F2BD42'\n  },\n  dataViewWins: {\n    backgroundColor: 'green',\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderColor: 'grey',\n    backgroundColor: '#D95040',\n    padding: 5,\n    borderRadius: 10,\n    marginTop: \"15%\"\n  },\n  textStyleForGrid: {\n    textAlign: 'center',\n    color: 'black',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  colStyleForGrid: {\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderRadius: 20,\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/Users/rgoren/Desktop/personal/Mole-next-2/src/screens/ProfileScreen.js"],"names":["React","Component","Box","Button","Icon","Content","Avatar","Text","FABStartGame","FABSettings","FABPaths","firebase","Col","Row","Grid","Notifications","Permissions","images","ProfileScreen","state","showAlert","userName","userPic","email","isReady","playerCash","playerWins","NavigateToHelp","props","navigation","navigate","registerForPushNotificationsAsync","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","console","log","askAsync","getExpoPushTokenAsync","token","fetch","method","headers","Accept","body","JSON","stringify","Token","Uid","auth","currentUser","uid","catch","error","alert","EditAvatarPic","changeScreen","screenName","setState","displayName","photoURL","endpoint","then","response","json","data","CashMole","NumOfWinnings","ProfilePic","flex","uri","marginTop","fontWeight","justifyContent","styles","colStyleForGrid","dollar_coins","textStyleForGrid","prize","marginBottom","marginLeft","navigationOptions","headerTitle","width","height","logo","headerBackgroundStyle","backgroundColor","headerRight","elevation","color","fontSize","headerLeft","StyleSheet","create","baseColumns","padding","dataViewCash","alignItems","borderStyle","borderColor","borderRadius","dataViewBombs","dataViewWins","textAlign","margin"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport {Box} from 'react-native-design-utility'\nimport { StyleSheet,ImageBackground,ActivityIndicator,Image} from 'react-native';\nimport {Button,Icon, Content} from 'native-base';\nimport { Avatar,Text} from 'react-native-elements';\nimport FABStartGame from '../common/StartAGame';\nimport FABSettings from '../common/Settings';\nimport FABPaths from '../common/BombShop';\nimport firebase from 'firebase';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\n\nimport {images} from '../constant/images';\n\n\n\n\nclass ProfileScreen extends Component{\n    static navigationOptions = ({ navigation }) =>{\n    return{\n      headerTitle: (\n        <Image style={{ width: 90, height: 40,flex:1 }} resizeMode=\"contain\" source={images.logo}/>\n      ),\n      headerBackgroundStyle: {backgroundColor:'#000'},\n      //headerTitleStyle: { color: '#4D5F66',fontSize:23,alignSelf: 'center' },\n      headerRight: \n       ( <Button\n          onPress={()=>navigation.navigate('Article')}\n          style={{backgroundColor:\"transparent\",elevation:0}}>\n            <Icon style={{color:\"#2DA3BD\",fontSize:35}}  name=\"md-paper\" />\n        </Button>\n       ),\n      headerLeft: \n       ( <Button\n          onPress={()=>navigation.navigate('Paths')}\n          style={{backgroundColor:\"transparent\",elevation:0}}>\n          <Icon style={{color:\"#2DA3BD\",fontSize:35}}  name=\"ios-infinite\" />\n        </Button>\n       ),\n      }\n    }\n    state = {\n      showAlert:false,\n      userName:\"\",\n      userPic:\"\",\n      email:\"\",\n      isReady:false,\n      playerCash:'?',\n      playerWins:'?'\n    }\n    NavigateToHelp = ()=>{\n      this.props.navigation.navigate('Intro');\n    }\n    //get token for notifications..\n    registerForPushNotificationsAsync = async ()=>{\n\n      const { status: existingStatus } = await Permissions.getAsync(\n        Permissions.NOTIFICATIONS\n      );\n      let finalStatus = existingStatus;\n      console.log(finalStatus)\n      // only ask if permissions have not already been determined, because\n      // iOS won't necessarily prompt the user a second time.\n      if (existingStatus !== 'granted') {\n        // Android remote notification permissions are granted during the app\n        // install, so this will only ask on iOS\n        const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n        finalStatus = status;\n        console.log(status)\n      }\n      console.log(finalStatus)\n\n      // Stop here if the user did not grant permissions\n      if (finalStatus !== 'granted') {\n        return;\n      }\n      \n      // Get the token that uniquely identifies this device\n      const  token = await Notifications.getExpoPushTokenAsync();\n\n      // POST the token to your backend server from where you can retrieve it to send push notifications.      \n    \n      return fetch('https://proj.ruppin.ac.il/bgroup65/prod/api/PlayerToken', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n         Token: token,\n         Uid:firebase.auth().currentUser.uid\n        }),\n      })\n      .catch((error)=>{\n        alert(error);\n      });\n    }\n\n    componentDidMount(){\n      //console.log(\"Profile: \", this.props.navigation.getParam())\n      this.registerForPushNotificationsAsync();\n      //get current user info from firebase auth\n        this.setState({\n          userName:firebase.auth().currentUser.displayName,\n          userPic:firebase.auth().currentUser.photoURL,\n          email:firebase.auth().currentUser.email,\n          isReady:true\n        },()=>{\n          const endpoint = 'http://proj.ruppin.ac.il/bgroup65/prod/api/playergetplayer?uid='+firebase.auth().currentUser.uid;\n          fetch(endpoint)\n            .then(response => response.json())\n            .then((data)=>{\n              this.setState({\n                playerCash:data.CashMole,\n                playerWins:data.NumOfWinnings,\n                userPic:data.ProfilePic,\n                \n              })\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n        })\n      \n\n    }\n    \n    EditAvatarPic = () =>{\n      this.props.navigation.navigate('Avatar');\n    }\n    changeScreen=(screenName)=>{ \n     this.props.navigation.navigate(screenName);\n    }\n    render(){\n      //const { lastScreen } = this.props.navigation.state.params;\n\n\n      if (!this.state.isReady) {\n        return(\n          <Box f={1} center bg=\"white\">\n            <ActivityIndicator color='purple' size=\"large\"/>\n          </Box>\n        )\n      }\n        return(\n          \n            <Box f={1} bg=\"transparent\">\n              <ImageBackground resizeMode='contain' style={{flex:1}} source={{uri:'https://securestrux.com/content/uploads/2014/02/network_blue_opacity_lighter.png'}}>\n                {/* {lastScreen==='Splash' ? <NotificationPopupToShow body=\"Welcome Back\" title=\"Hey you\"/>:<Text></Text>} */}\n              <Box f={1} style={{marginTop:\"15%\"}} center>\n                <Avatar size='xlarge' \n                rounded\n                source={{\n                  uri:\n                   this.state.userPic?this.state.userPic:'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n                }}\n                showEditButton\n                onEditPress={this.EditAvatarPic}\n              />\n              <Text h5 style={{fontWeight:\"bold\",marginTop:\"5%\"}}>{this.state.userName}</Text>\n            </Box>\n            </ImageBackground>\n\n            \n                  <Content contentContainerStyle={{ flex: 1,marginTop:'4%'}}>\n                    <Grid style={{justifyContent:'space-evenly'}}>\n                      <Col></Col>\n                      <Col style={styles.colStyleForGrid}>\n                        <Row>\n                          <Col >\n                            <ImageBackground resizeMode='contain' style={{ flex: 1 }} source={images.dollar_coins}>\n                            <Row></Row>\n                            <Text style={styles.textStyleForGrid}>{this.state.playerCash}</Text>     \n                            </ImageBackground> \n                            </Col>                 \n                        </Row>\n                      </Col>\n                      <Col style={styles.colStyleForGrid}>\n                        <Row>\n                          <Col>\n                            <ImageBackground resizeMode='contain' style={{ flex: 1}} source={images.prize}>\n                              <Row>\n                              </Row>\n                              <Text style={styles.textStyleForGrid}>{this.state.playerWins}</Text>\n                            </ImageBackground>\n                          </Col>                        \n                        </Row>\n                      </Col>\n                      <Col></Col>\n                    </Grid>\n                </Content>\n\n            <Box bg='transparent' f={1} style={{marginBottom:\"3%\"}}>\n                <Box f={1} >\n                  <FABStartGame GoToScreen={this.changeScreen}/> \n                </Box>\n                <Box style={{marginLeft:\"37%\"}}>\n                  <FABPaths GoToScreen={this.changeScreen}/>\n                </Box> \n                <Box>\n                  <FABSettings GoToScreen={this.changeScreen} />\n                </Box>\n            </Box>\n\n\n          </Box>\n          \n        )\n    }\n}\n\n\nexport default ProfileScreen;\n\n\n//STYLE\nconst styles = StyleSheet.create({\n  baseColumns:{\n    padding:10,\n\n  },\n  dataViewCash:{\n    alignItems:'center',\n    borderStyle:'solid',\n    borderColor:'grey',\n    padding:5,\n    borderRadius:10,\n    backgroundColor:'#4F86EC'\n  },\n  dataViewBombs:{\n    alignItems:'center',\n    borderStyle:'solid',\n    borderColor:'grey',\n    //borderWidth:1,\n    padding:10,\n    borderRadius:10,\n    backgroundColor:'#F2BD42'\n  },\n  dataViewWins:{\n    backgroundColor:'green',\n    alignItems:'center',\n    borderStyle:'solid',\n    borderColor:'grey',\n    backgroundColor:'#D95040',\n    padding:5,\n    borderRadius:10,\n    marginTop:\"15%\"\n  },\n  textStyleForGrid:{\n    textAlign:'center',\n    color:'black',\n    fontSize:20,\n    fontWeight:'bold',\n    //marginBottom:30\n  },\n  colStyleForGrid:{\n    backgroundColor:'transparent',\n    borderStyle:'solid',\n    borderRadius:20,\n    // borderWidth:1,\n    margin:8,\n    //backgroundColor:'#70A380'\n  }\n})"]},"metadata":{},"sourceType":"module"}